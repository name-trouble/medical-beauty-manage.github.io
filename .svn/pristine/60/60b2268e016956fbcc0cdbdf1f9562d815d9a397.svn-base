4<template>
    <div class="selCommon AgentManage">
        <!-- 查询信息 -->
        <el-form :inline="true" :model="formInline" class="demo-form-inline form_search" label-width="90px">
            <el-form-item label="注册日期：" style='margin-bottom:10px;font-size:12px !important;'>
                <el-date-picker
                    v-model="date"
                    type="daterange"
                    @change="dateSelect"
                    style="width: 200px"
                    placeholder="选择日期范围">
                </el-date-picker>
            </el-form-item>
            <el-form-item label="推荐人：" class="form_item_mt10">
                <el-input v-model="formInline.referrerName" placeholder="" style="width: 200px;"  v-on:keyup.enter.native="onSubmit"></el-input>
            </el-form-item>
            <el-form-item label="代理人：" class="form_item_mt10">
                <el-input v-model="formInline.branchName" placeholder="" style="width: 200px;"  v-on:keyup.enter.native="onSubmit"></el-input>
            </el-form-item>
            <el-form-item label="代理等级：" class="form_item_mt10">
                <el-select v-model="formInline.grade" placeholder="请选择" style='width:200px;' @change="onSubmit">
                    <el-option label="全部" value=""></el-option>
                    <el-option v-for="item in gradeList" :label="item.BranchGradeName" :value="item.Code" :key="item.Code"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="来源渠道：" class="form_item_mt10">
                <el-select v-model="formInline.region" placeholder="请选择" style='width:200px;' @change="onSubmit">
                    <el-option label="全部" value=""></el-option>
                    <el-option v-for="item in origionList" :label="item.DataName" :value="item.DataName" :key="item.DataName"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="状态：" class="form_item_mt10">
                <el-select v-model="formInline.IsEnable"  style='width:200px;' @change="onSubmit">
                    <el-option label="全部" value="-1"></el-option>
                    <el-option label="未启用" value="0"></el-option>
                    <el-option label="启用" value="1"></el-option>
                    <el-option label="退会" value="2"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="医院：" class="form_item_mt10">
                <el-select v-model="formInline.hospital"  style='width:200px;' @change="onSubmit">
                    <el-option v-for="(item,index) in hospitalList" :key="index" :label="item.supplierName" :value="item.code"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="是否结清：" class="form_item_mt10">
                <el-select v-model="formInline.IsPayOff"  style='width:200px;' @change="onSubmit">
                    <el-option label="全部" value=""></el-option>
                    <el-option label="已结清" value="1"></el-option>
                    <el-option label="未结清" value="0"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="销售公司："  class="form_item_mt10" >
                <el-select style="width:200px" v-model="formInline.topBranch"  filterable placeholder="请选择">
                    <el-option v-for="(item,index) in topBranchList" :label="item.branchName" :value="item.code" :key="index"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="消费商卡号：" class="form_item_mt10">
                <el-input v-model="formInline.cardNO" placeholder="" style="width: 200px;" v-on:keyup.enter.native="onSubmit"></el-input>
            </el-form-item><br/>
            <el-form-item label=" " class="form_item_mt10">
                <el-button type="primary" @click="onSubmit" class="searchBtn">查询</el-button>
                <!-- <el-button type="primary" class="searchBtn" @click="exportTbale" :loading="ExportLoading">导出报表</el-button> -->
                <Export :tHeader="tHeader" ref="exportTable" :filterVal='filterVal' :tableData1='tableData1' :name='name' style="display:none"></Export>
            </el-form-item>
        </el-form>
        <!-- 查询信息 -->

        <!-- 信息表 -->
        <el-table :data="tableData" border style="width: 100%;margin-top:15px;margin-bottom:10px;" class="min_table smt" max-height="560" v-loading="loading">
            <el-table-column prop="Code" label="代理编号" min-width="110">
                <template scope="scope">
                    <div class="table_btn" @click="DetailMes(scope.$index,tableData)" type="text">{{scope.row.BranchName}}<br/>{{scope.row.Code}}</div>
                </template>
            </el-table-column>
            <el-table-column prop="RegistDate" label="注册日期" width="100">
                <template scope="scope">
                    <span v-if="scope.row.RegistDate">
                         {{scope.row.RegistDate.substring(0,10)}}
                    </span>
                </template>
            </el-table-column>
            <el-table-column prop="ReferrerName" label="推荐人" min-width="130">
                <template scope="scope">
                    <span v-if="scope.row.ReferrerName">{{scope.row.ReferrerName}}</span><br/>
                    <span v-if="scope.row.ReferrerCode">[{{scope.row.ReferrerCode}}]</span>
                </template>
            </el-table-column>
            <el-table-column prop="BranchName" label="策略-进度" min-width="100">
                <template scope="scope">
                    <div style="float:left">
                        <span v-if="scope.row.IdentityType == 2">老策略</span>
                        <span v-if="scope.row.IdentityType == 1">新策略</span>
                    </div> 
                    &nbsp;
                    <el-progress v-if="scope.row.IdentityType == 1&&scope.row.ComplateRange<100" type="circle" :percentage="scope.row.ComplateRange" :stroke-width="1" :width="40"></el-progress>
                    <el-progress v-if="scope.row.IdentityType == 1&&scope.row.ComplateRange ==100" type="circle" :percentage="100" :stroke-width="1" :width="40" status="success"></el-progress>
                </template>
            </el-table-column>
            <el-table-column prop="HospitalName" label="医院" min-width="130"></el-table-column>
            <el-table-column prop="PhoneNumber" label="联系电话" min-width="115">
                 <template scope="scope">
                    <span v-if="scope.row.PhoneNumber">{{scope.row.PhoneNumber.substring(0,3)+'****'+scope.row.PhoneNumber.substring(7)}}</span>
                </template>
            </el-table-column>
            <el-table-column prop="CardNO" label="消费商卡号" min-width="100"></el-table-column>
          <!--  <el-table-column prop="IDCard" label="身份证号" min-width="180"></el-table-column>-->
            <el-table-column prop="SourcWayeCode" label="来源渠道" width="90"></el-table-column>
            <el-table-column prop="BranchGradeName" label="代理等级" min-width="130"></el-table-column>
            <el-table-column prop="PayAmount" label="缴纳会费" min-width="80">
                <template scope="scope">
                   <span v-if="scope.row.PayAmount||scope.row.PayAmount==0">{{scope.row.PayAmount.toQFW()}}</span>
                </template>
            </el-table-column>
            <el-table-column prop="RealPayAmount" label="已缴纳会费" min-width="80">
                <template scope="scope">
                       <span v-if="scope.row.RealPayAmount||scope.row.RealPayAmount==0">{{scope.row.RealPayAmount.toQFW()}}</span>
                </template>
            </el-table-column>
             <el-table-column prop="Pledge" label="缴纳押金" min-width="80">
                 <template scope="scope">
                       <span v-if="scope.row.Pledge||scope.row.Pledge==0">{{scope.row.Pledge.toQFW()}}</span>
                </template>
             </el-table-column>
            <el-table-column prop="IsPayOff" label="是否结清" width="75">
                <template scope="scope">
                    <el-tag type="warning" v-if="scope.row.IsPayOff == false">未结清</el-tag>
                    <el-tag type="success" v-if="scope.row.IsPayOff == true">已结清</el-tag>
                </template>
            </el-table-column>
           
            <el-table-column prop="IsEnable" label="状态" width="70">
                <template scope="scope">
                   <el-tag type="warning" v-if="scope.row.IsEnable==0">未启用</el-tag>
                    <el-tag type="success" v-if="scope.row.IsEnable==1">启用</el-tag>
                     <el-tag type="danger" v-if="scope.row.IsEnable==2">退会</el-tag>
                </template>
            </el-table-column>
            <el-table-column prop="grade" label="操作" width="140">
                <template scope="scope">
                    <el-button @click="upgradeApply(scope.$index,tableData)" type="primary" size="small"
                               :disabled="scope.row.IsEnable != 1||scope.row.IsPayOff == false||scope.row.BranchGradeCode=='G100001'">升级申请</el-button>
                               <!-- 新策略 -->
                    <el-button v-if="(typeCode == '01'||typeCode == '03')&&scope.row.IdentityType == 1" @click="open(scope.$index,tableData)" type="primary" size="small"
                               :disabled="scope.row.IsEnable != 0||scope.row.ComplateRange<50">启用</el-button>
                                <!-- 老策略 -->
                    <el-button v-if="(typeCode == '01'||typeCode == '03')&&scope.row.IdentityType == 2" @click="open(scope.$index,tableData)" type="primary" size="small"
                               :disabled="scope.row.IsEnable != 0||scope.row.IsPayOff == false">启用</el-button>
                </template>
            </el-table-column>
        </el-table>
        <!-- 信息表 -->
        <!-- 分页 -->
        <div class="block">
            <el-pagination
                @size-change="handleSizeChange"
                @current-change="handleCurrentChange"
                :current-page="currentPage"
                :page-sizes="[10, 20, 30, 40]"
                :page-size="size"
                layout="total, sizes, prev, pager, next, jumper"
                :total="total">
            </el-pagination>
        </div>
        <!-- 分页 -->
        <el-dialog title="升级申请" :visible.sync="dialogFormVisible[0]" size='' :close-on-click-modal="false" top="5%">
            <div v-if="dialogFormVisible[0]">
                <upGrade ref="upgrade" :baseData="baseData" style="width:920px;" @upClose="upClose"></upGrade>
            </div>
        </el-dialog>
        <el-dialog title="代理详情" :visible.sync="dialogFormVisible[2]" size='' top="5%">
            <div v-if="dialogFormVisible[2]">
                <agentDetail ref="detail" :detailCode="detailCode"  style="width: 920px"></agentDetail>
            </div>
        </el-dialog>
    </div>
</template>

<script type="text/ecmascript-6">
    import "@/style/selfCommon.less"
    import Export from '../../../components/export'
    import upGrade from "./components/upGrade.vue"
    import agentDetail from "./components/agentDetail.vue"
    import { getStore } from '@/config/mUtils'
    import {GetBranchByConditions,GetBaseDataAll,GetBranchGradeAll,GetDropDownPermission,EnableBranch,GetBranchByCode} from "../../../api/myData"
    export default {
        // name: 'AgentManage',
        data() {
            return {
                ExportLoading:false,
                typeCode:getStore('typeCode'),
                hospitalList:'',
                IdentityType:'',
                options:[],
                loading:false,
                referList:[],
                baseData:'',
                bankList:[],//004
                eduList:[],//001
                industryList:[],//002
                origionList:[],//003来源
                gradeList:[],
                currentPage: 1,
                detailCode:'',
                dialogFormVisible: [false,false,false,false,false,false],
                form: {
                    name:'',
                    region:''
                },
                formLabelWidth: '90px',
                total: 0,
                size: 10,
                date:'',
                formInline: {
                    date1: '',
                    date2: '',
                    grade: '',
                    referrerName:'',
                    branchName:'',
                    region:'',
                    IsEnable:"0",
                    hospital:'',
                    IsPayOff:'',
                    cardNO:'',
                    topBranch:'',
                },
                tableData: [],
                openCode:'',
                topBranchList:[],
                allData:[],
            }
        },
        computed: {
            /* 导出报表参数 tHeader,filterVal,tableData1*/
            tHeader(){
                return ['编号','消费商', '注册日期', '推荐人', '医院','联系电话', '消费商卡号', '来源渠道', '代理等级', '缴纳会费','已缴会费','是否结清','状态']
            },
            filterVal(){
                return ['Code','BranchName','RegistDate','ReferrerName', 'HospitalName','PhoneNumber', 'CardNO','SourcWayeCode','BranchGradeName','PayAmount','RealPayAmount','IsPayOff','IsEnable']
            },
            tableData1(){
                this.allData.forEach((row,index)=>{
                    if(row.RegistDate){
                        row.RegistDate = row.RegistDate.substring(0,10)
                        
                    }else{
                        row.RegistDate = ""
                    }
                    row.IsPayOff = row.IsPayOff?"已结清":"未结清"
                    row.IsEnable = this.getStatus(row.IsEnable)
                })
                return this.allData
            },
            name(){
                return '代理'
            },
            /*导出报表参数 tHeader,filterVal,tableData1*/
        },
        mounted: function () {
            this.getBranchGradeAll()
        },
        methods: {
            getStatus(status){
                switch(status){
                    case 0: return "未启用";
                    case 1: return '已启用';
                    case 2: return "已退会";
                }
            },
            exportTbale(){
                this.ExportLoading = true
                this.getBranchByConditions({
                    referrerName: this.formInline.referrerName.removeSP(),
                    branchName: this.formInline.branchName.removeSP(),
                    branchGradeCode: this.formInline.grade,
                    sourcWayeCode: this.formInline.region,
                    startDate: this.formInline.date1,
                    endDate: this.formInline.date2,
                    pageIndex: this.currentPage,
                    pageSize: this.total,
                    IsEnable:this.formInline.IsEnable,
                    hospitalCode:this.formInline.hospital,
                    IsPayOff:this.formInline.IsPayOff,
                    cardNO:this.formInline.cardNO,
                    TopBranch:this.formInline.topBranch
                },'export')
            },
            async EnableBranch(params){
                try{
                    let res =await EnableBranch(params)
                    if(res.success){
                        this.$message({message: '启用成功', type: 'success'});
                        this.getTableDate()
                    }else{
                        this.$message.error('启用失败'+res.errorMessage);
                    }
                }catch(err){
                    console.log(err)
                    this.$message.error('启用失败');
                }
            },
//            获取所有代理等级
            async getBranchGradeAll(){
                try{
                    let [res0,res1,res,baseData] = await Promise.all([GetDropDownPermission({typeId:"2"}),GetDropDownPermission({typeId: 1}),GetBranchGradeAll(),GetBaseDataAll()])
                    this.topBranchList = res0.data
                    this.hospitalList = res1.data
                    this.formInline.hospital = this.hospitalList[0].code
                    this.gradeList = res
                    this.baseMesSplit(baseData)
                }catch(err){
                    console.log(err)
                }
            },

//            条件查询
            async getBranchByConditions(params,ope){
                try{
                    
                    let res = await GetBranchByConditions(params)
                    this.loading = false
                     res.forEach(row=>{
                        if(row.ComplateRange ==0||row.ComplateRange){
                            row.ComplateRange = row.ComplateRange.mul(100)
                        }else{
                            row.ComplateRange = 0
                        }
                    })
                    if(ope){
                        this.ExportLoading = false
                        this.allData = res
                        setTimeout(()=>{
                            this.$refs.exportTable.handleDownload()
                        },10)
                    }else{
                        this.tableData = res
                        this.tableData.push()
                        if(res.length!=0){
                            this.total = res[0].RecordCount
                        }
                    }
                }catch(err){
                    console.log(err)
                }
            },

            dateSelect(val){
                if(val.length){
                    this.formInline.date1 = val.substring(0,10)
                    this.formInline.date2 = val.substring(13)
                }else{
                    this.formInline.date1 = ''
                    this.formInline.date2 = ''
                }
            },
            // 条件查询
            onSubmit() {
                console.log('submit!');
                this.currentPage = 1
                this.getTableDate(1)
            },

            // 分页页面展示数据条数改变触发事件
            handleSizeChange(val) {
                this.size = val
                this.getTableDate()
            },

            // 分页当前页码改变触发事件
            handleCurrentChange(val) {
                this.currentPage = val
                this.getTableDate()
            },
            upClose(){
                this.dialogOpe(0,false,1)
            },
            dialogOpe(index,status,isGet){
                this.dialogFormVisible[index] = status
                this.dialogFormVisible.push()
                if(isGet){
                    this.getTableDate()
                }
            },
            upgradeApply(index,data){
                this.dialogOpe(0,true)
                this.baseData = data[index]
                this.baseData.from = "0"//表示从升级申请进入
            },
            DetailMes(index,data){
                this.detailCode = data[index].Code
                this.dialogOpe(2,true)
            },
//            启用
            async open(index,data){
                this.openCode = data[index].Code
                let res = await GetBranchByCode({branchcode:data[index].Code})
                let tipMes = '',type=res.Branch.IdentityType == 1?'新策略':'老策略'
                type = '推荐提成策略：'+type
                if(res.CPOList.length>0){
                }else{
                    if(res.Branch.BranchPoints>0){
                    }else{
                        tipMes = '该代理未选择套餐!'
                    }
                }
                this.IdentityType = data[index].Identit
                const h = this.$createElement;
                this.$msgbox({
                    title: '提示',
                    message: h('p', null, [
                        h('div', {style:'color:red'}, tipMes),
                        h('div', null, type),
                        h('span', null, '是否启用? '),
                    ]),
                    showCancelButton: true,
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning',
                    beforeClose: (action, instance, done) => {
                        if (action === 'confirm') {
                            instance.confirmButtonLoading = true;
                            instance.confirmButtonText = '执行中...';
                            this.openSure()
                            instance.confirmButtonLoading = false;
                            done();
                        } else {
                            done();
                        }
                    }
                }).then(action => {});
            },

            openSure(){
                this.EnableBranch({
                    branchcode: this.openCode
                })
            },
//            基础信息分离
            baseMesSplit(data){
                data.forEach(row=>{
                    if(row.BusinessCode == "0001"){
                        this.eduList.push(row)
                    }
                    if(row.BusinessCode == "0002"){
                        this.industryList.push(row)
                    }
                    if(row.BusinessCode == "0003"){
                        this.origionList.push(row)
                    }
                    if(row.BusinessCode == "0004"){
                        this.bankList.push(row)
                    }
                })
            },
            getTableDate(){
                this.loading = true
                this.getBranchByConditions({
                    referrerName: this.formInline.referrerName.removeSP(),
                    branchName: this.formInline.branchName.removeSP(),
                    branchGradeCode: this.formInline.grade,
                    sourcWayeCode: this.formInline.region,
                    startDate: this.formInline.date1,
                    endDate: this.formInline.date2,
                    pageIndex: this.currentPage,
                    pageSize: this.size,
                    IsEnable:this.formInline.IsEnable,
                    hospitalCode:this.formInline.hospital,
                    IsPayOff:this.formInline.IsPayOff,
                    cardNO:this.formInline.cardNO,
                    TopBranch:this.formInline.topBranch
                })
            },
        },
        components: {
            Export,
            upGrade,
            agentDetail
        }
    }
</script>

<!-- Add "scoped" attribute to limit CSS to this component only -->
<style scoped>
    
</style>
