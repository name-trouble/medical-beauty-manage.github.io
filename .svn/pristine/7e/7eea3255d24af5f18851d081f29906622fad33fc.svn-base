<template>
    <div class="selCommon MemberManage">
        <el-form :inline="true" :model="formInline" class="demo-form-inline form_search" label-width="80px">
            <el-form-item label="注册时间：" class="form_item_mt10">
                <el-date-picker
                    v-model="date"
                    type="daterange"
                    class="form_sear_ipt"
                    @change="dateSelect"
                    placeholder="选择日期范围">
                </el-date-picker>
            </el-form-item>
            <el-form-item label="会员：" class="form_item_mt10">
                <el-input v-model="formInline.name" placeholder="" class="form_sear_ipt"  v-on:keyup.enter.native="onSubmit"></el-input>
            </el-form-item>
             <el-form-item label="会员类型：" class="form_item_mt10">
                <el-select v-model="formInline.tag" class="form_sear_ipt" @change="onSubmit">
                    <el-option label="全部" value=""></el-option>
                    <el-option v-for="(item,index) in tagsList" :label="item.tagName" :value="item.tagName" :key="index"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="会员生日：" class="form_item_mt10">
                 <el-select v-model="formInline.mounth" style="width:97px" @change="mouChange" placeholder="选择月份">
                     <el-option label="全部" value=""></el-option>
                    <el-option v-for="(item,index) in mounthList" :key="index" :label="item+'月'" :value="item"></el-option>
                </el-select>
                <el-select v-model="formInline.day" style="width:97px" placeholder="选择日期">
                    <el-option v-for="(item,index) in dayList" :key="index" :label="item+'日'" :value="item"></el-option>
                </el-select>
            </el-form-item>
             
            <el-form-item label="手机号：" class="form_item_mt10">
                <el-input v-model="formInline.phone" placeholder="" class="form_sear_ipt"  v-on:keyup.enter.native="onSubmit"></el-input>
            </el-form-item>
            <el-form-item label="推荐人：" class="form_item_mt10">
                <el-input v-model="formInline.rec" placeholder="" class="form_sear_ipt"  v-on:keyup.enter.native="onSubmit"></el-input>
            </el-form-item>
            <el-form-item label="认证状态：" class="form_item_mt10">
               <el-select v-model="formInline.status"  class="form_sear_ipt" @change="onSubmit">
                   <el-option label="全部" value=""></el-option>
                   <el-option label="未认证" value="0"></el-option>
                   <el-option label="已认证" value="1"></el-option>
               </el-select>
            </el-form-item>
            <el-form-item label="医院：" class="form_item_mt10">
                <el-select v-model="formInline.hospital" class="form_sear_ipt" @change="onSubmit">
                    <el-option v-for="(item,index) in hospitalList" :key="index" :label="item.supplierName" :value="item.code"></el-option>
                </el-select>
            </el-form-item><br/>
            <el-form-item label=" " class="form_item_mt10">
                <el-button type="primary" @click="onSubmit" class="searchBtn">查询</el-button>
                <!-- <Export :tHeader="tHeader" :filterVal=' filterVal' :tableData1='tableData1' :name='name'></Export> -->
                <el-button type="primary" @click="register" class="searchBtn">会员注册</el-button>
            </el-form-item>
        </el-form>
        <!-- 信息表 -->
        <el-table :data="tableData" border style="width: 100%;margin-top:15px;margin-bottom:10px;min-height:400px"  v-loading="loading">
            <el-table-column prop="Code" width="120" label="会员编号" >
                <template scope="scope">
                    <el-button type="text" @click="det(scope.row)">{{scope.row.Code}}</el-button>
                </template>
            </el-table-column>
            <el-table-column prop="CreateOn" width="100" label="注册日期" >
                <template scope="scope">
                    <span v-if="scope.row.CreateOn">
                        {{scope.row.CreateOn.substring(0,10)}}
                    </span>
                </template>
            </el-table-column>
            <el-table-column prop="MemberName" label="会员" min-width="80"> </el-table-column>
            <el-table-column prop="MemberTags" label="类型" min-width="50"></el-table-column>
            <el-table-column prop="PhoneNumber" label="手机号" min-width="120">
                <template scope="scope">
                    <span v-if="scope.row.PhoneNumber">{{scope.row.PhoneNumber.substring(0,3)+'****'+scope.row.PhoneNumber.substring(7)}}</span>
                </template>
            </el-table-column>
            <el-table-column prop="CardNO" label="卡号" min-width="90"></el-table-column>
            <!-- <el-table-column prop="IDCard" label="身份证号" min-width="100"></el-table-column> -->
            <el-table-column prop="Birthday" label="生日" min-width="100"></el-table-column>
            <el-table-column prop="Sex" label="性别" min-width="70">
                <template scope="scope">
                    <span v-if="scope.row.Sex == 1">男</span>
                    <span v-if="scope.row.Sex == 0">女</span>
                </template>
            </el-table-column>
            <el-table-column prop="ReferrerCode" label="推荐人" min-width="180">
                <template scope="scope">
                    {{scope.row.ReferrerName}} [{{scope.row.ReferrerCode}}]<span v-if="scope.row.BranchTags">({{scope.row.BranchTags}})</span>
                </template>
            </el-table-column>
            <el-table-column prop="GradeName" label="推荐人等级" min-width="150"></el-table-column>
            <el-table-column prop="HospitalName" label="医院" min-width="150"></el-table-column>
            <el-table-column prop="IsAuth" label="认证状态" min-width="100">
                <template scope="scope">
                    <el-tag type="danger" v-if="scope.row.IsAuth == false">未认证</el-tag>
                    <el-tag type="success" v-if="scope.row.IsAuth == true">已认证</el-tag>
                </template>
            </el-table-column>
            <el-table-column prop="CreateBy" label="创建人" min-width="100"></el-table-column>
            <el-table-column prop="IsAuth" label="操作" min-width="200" align="center">
                <template scope="scope">
                    <el-button @click="edit(scope.$index,tableData)" type="primary" size="small">编辑</el-button>
                    <el-button v-if="typeCode=='01'||scope.row.CreateBy==userName" @click="del(scope.row)" type="primary" size="small">删除</el-button>
                    <el-button type="primary" size="small">
                        <a style="color:#fff;" :href="xmxUrl+'/Branch/MemberPrint?code='+scope.row.Code" :download="scope.row.MemberName">腕带打印</a>
                    </el-button>
                </template>
            </el-table-column>
        </el-table>
        <!-- 信息表 -->

        <!-- 分页 -->
        <div class="block">
            <el-pagination
                @size-change="handleSizeChange"
                @current-change="handleCurrentChange"
                :current-page="currentPage"
                :page-sizes="[10, 20, 30, 40]"
                :page-size="size"
                layout="total, sizes, prev, pager, next, jumper"
                :total="total">
            </el-pagination>
        </div>
        <!-- 分页 -->

      <!--注册弹窗-->
        <el-dialog title="会员注册" :visible.sync="dialogTableVisible" size="" :close-on-click-modal="false" top="5%">
            <register style="width: 500px" @close="close" v-if="dialogTableVisible"></register>
        </el-dialog>
        <!--编辑弹窗-->
        <el-dialog title="编辑" :visible.sync="dialogTableVisible1" size="" top="5%">
            <editRegister :mes="mes" ref="editMember" v-if="dialogTableVisible1" style="width: 500px" @uploadImg="uploadImg" @closeEdit="closeEdit"></editRegister>
        </el-dialog>
        <el-dialog title="详情" :visible.sync="dialogTableVisibleD" size="" :close-on-click-modal="false" top="20%">
            <det style="width: 500px" v-if="dialogTableVisibleD" :mes="mes"></det>
        </el-dialog>
        <el-dialog title="查看凭证" v-model="dialogVisible" size="small">
            <el-upload
                :action="uploadUrl"
                list-type="picture-card"
                :acceptImage="acceptImage"
                :on-success="success"
                :fileList="fileList"
                :on-preview="handlePictureCardPreview"
                :on-remove="handleRemove">
                <i class="el-icon-plus"></i>
            </el-upload>
            <div class="form_footer">
                <el-button @click="sure" type="primary">确定</el-button>
                <el-button @click="dialogVisible = false">取消</el-button>
            </div>
        </el-dialog>
        <el-dialog :visible.sync="dialogPhoto" size="small" :modal="false" top="5%">
            <img width="100%" :src="baseImgPath+dialogImageUrl" alt="">
        </el-dialog>
    </div>
</template>

<script type="text/ecmascript-6">
    import  "../../style/selfCommon.less"
    import { xmxUrl, baseImgPath } from '@/config/env'
    import { imgApi, acceptImage } from '@/config/common'
    let uploadUrl = xmxUrl + imgApi + '?op=branchshop'
    import register from "./components/register.vue"
    import editRegister from "./components/editRigster.vue"
    import det from "./components/memberDet"
    import {GetMembers,GetDropDownPermission,GetTagByPage,DeleteMember,MemberPrint} from "@/api/myData"
    import { getStore, getCookie } from '../../config/mUtils';
    export default {
        data () {
            return {
                uploadUrl,
                baseImgPath,
                acceptImage,
                dialogVisible:false,
                dialogPhoto:false,
                dialogImageUrl:'',
                fileList:[],

                xmxUrl,

                userName:getCookie("userName"),
                typeCode:getStore('typeCode'),
                loading:true,
                mes:{},
                dialogTableVisible:false,
                dialogTableVisible1:false,
                dialogTableVisibleD:false,
                total:10,
                size:10,
                currentPage:1,
                hospitalList:[],
                date:"",
                tagsList:[],
                mounthList:[],
                dayList:[],
                formInline:{
                    tag:"",
                    date1:"",
                    date2:"",
                    status:"",
                    name:"",
                    phone:"",
                    rec:"",
                    IsAuth:"",
                    hospital:'',
                    birthDay:"",
                    mounth:"",
                    day:""
                },
                tableData:[]
            }
        },
        computed: {
            /* 导出报表参数 tHeader,filterVal,tableData1*/
            // tHeader(){
            //     return ['会员编号','注册日期', '会员', '手机号', '身份证号', '生日', '性别', '推荐人','推荐人等级','医院','认证状态']
            // },
            // filterVal(){
            //     return ['Code', 'CreateOn', 'MemberName', 'PhoneNumber', 'IDCard','Birthday','Sex','ReferrerName','grade','grade','IsAuth']
            // },
            // tableData1(){
            //     return this.tableData
            // },
            // name(){
            //     return '会员管理'
            // },
            /*导出报表参数 tHeader,filterVal,tableData1*/
        },
        
        mounted(){
            this.getBaseMes()
           this.getHospital()
        },
        methods:{
             handlePictureCardPreview(file) {
                 debugger
                this.dialogImageUrl = file.response;
                this.dialogPhoto = true;
            },
            sure(){
                let arr = []
                this.fileList.forEach(row=>{
                    arr.push(row.response)
                })
                this.$refs.editMember.loadImg(arr.join(","))
                this.dialogVisible = false
            },
            success(response, file, fileList){
                debugger
                this.fileList = fileList
            },
            handleRemove(file, fileList) {
                this.DelImg(file)
                this.fileList = fileList
            },
            uploadImg(val){
                debugger
                this.fileList = []
                this.dialogVisible = true
                if(val){
                    val.split(",").forEach(ele => {
                        this.fileList.push({
                            response:ele,
                            url:this.baseImgPath+ele
                        })
                    });
                }
            },

            del(data){
                this.$confirm('此操作将删除该会员信息, 是否继续?', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    this.DeleteMember({id:data.Id})
                })
            },
            async DeleteMember(params){
                let res = await DeleteMember(params)
                if(res.status){
                        this.$message({message: '删除成功', type: 'success'})
                        this.search()
                    }else{
                        this.$message.error('删除失败')
                    }
            },
            getBaseMes(){
                let arr = []
                for(let j = 1;j<13;j++){
                    if(j<10){
                        arr.push("0"+j)
                    }else{
                        arr.push(j+"")
                    }
                }
                this.mounthList = arr
                let date = new Date()
            },

             mouChange(){
                 this.formInline.day = ""
                let arr=['01','03','05','07','08','10','12'],arr2 = ['04','06','09','11']
                let day = []
                for(let i = 1;i<32;i++){
                    if(i<10){
                        day.push("0"+i)
                    }else{
                        day.push(i+"")
                    }
                }
                this.dayList = []
                if(this.formInline.mounth == '02'){
                    this.dayList = day.slice(0,day.length-2)
                }
                if(arr.indexOf(this.formInline.mounth)>=0){
                    this.dayList = day
                }
                if(arr2.indexOf(this.formInline.mounth)>=0){
                    this.dayList = day.slice(0,day.length-1)
                }
            },

            async getHospital(params){
                try {
                    let [tags,res1] = await Promise.all([GetTagByPage({TypeCode:"6", pageIndex:1, pageSize:100, keywords:""}),GetDropDownPermission({typeId: 1})])
                    this.tagsList = tags.data
                    this.hospitalList = res1.data
                    this.formInline.hospital = this.hospitalList[0].code
                    this.search()
                } catch (err) {
                    console.log(err)
                }
            },
//            获取会员
            async GetMembers(params){
                try {
                    let res = await GetMembers(params)
                    this.loading = false
                    if(res.length!=0){
                        this.total = res[0].RecordCount
                    }else{
                        this.total = 0
                    }
                    this.tableData = res
                } catch (err) {
                    console.log(err)
                }
            },
            getDate(val){
                this.formInline.birthDay = val.substring(0,10)
            },
            onSubmit(){
                this.currentPage = 1
                this.search()
            },
           
            search(){
                this.loading = true
                let birth=""
                if(this.formInline.mounth.length>0){
                    birth = this.formInline.mounth+"-"+this.formInline.day
                }
                this.GetMembers({
                    pageIndex:this.currentPage,
                    pageSize:this.size,
                    memberName:this.formInline.name,
                    phoneNumber:this.formInline.phone,
                    referrerName:this.formInline.rec,
                    startDate:this.formInline.date1,
                    endDate:this.formInline.date2,
                    isAuth:this.formInline.status,
                    hospitalCode:this.formInline.hospital,
                    birthDay:birth,
                    memberTags:this.formInline.tag
                })
            },
            dateSelect(val){
                if(val){
                    this.formInline.date1 = val.substring(0,10)
                    this.formInline.date2 = val.substring(13)
                }else{
                    this.formInline.date1 = ""
                    this.formInline.date2 = ""
                }
                this.onSubmit()
            },
            edit(index,data){
                this.mes=data[index]
                this.dialogTableVisible1 = true
            },
            handleSizeChange(val) {
                this.size = val
                this.search()
            },
            handleCurrentChange(val) {
                this.currentPage = val
                this.search()
            },

            register(){
                this.dialogTableVisible = true
            },
            
            close(val){
                this.dialogTableVisible = false
                if(val){
                    this.search()
                }
            },
            closeEdit(val){
                this.dialogTableVisible1 = false
                if(val){
                    this.search()
                }
            },
            det(data){
                this.dialogTableVisibleD = true
                this.mes = data
            },
            async print(data){
                let res = await MemberPrint({
                    code:data.Code
                })
            }
        },
        components: {
            // Export,
            register,
            editRegister,
            det
        }
    }
</script>

<!-- Add "scoped" attribute to limit CSS to this component only -->
<style scoped>

</style>
