<template>
    <div class="prop selCommon">
        <el-form :inline="true" :model="formInline" class="form_search" label-width="80px">
            <el-form-item label="关键字：" class="form_item_mt10">
                <el-input v-model="formInline.keywords" placeholder="执行医院" style="width: 200px;"  v-on:keyup.enter.native="onSubmit"></el-input>
            </el-form-item>
            <el-form-item label=" " class="form_item_mt10">
                <el-button type="primary" @click="onSubmit" class="searchBtn">查询</el-button>
                <el-button type="primary" class="searchBtn" @click="addTag('添加')" icon="plus">添加新比例</el-button>
            </el-form-item>
        </el-form>
        <!-- 信息表 -->
        <el-table :data="tableData" border style="width: 100%;margin-top:15px;margin-bottom:10px;" height="460">
            <el-table-column prop="hospitalExecutive" label="编号" min-width="150"></el-table-column>
            <el-table-column prop="executiveName" label="执行医院" min-width="120"></el-table-column>
            <el-table-column prop="rate" label="执行方比例" min-width="150">
                <template scope="scope">
                    {{scope.row.rate.mul(100)}}%
                </template>
            </el-table-column>
            <el-table-column prop="recommendRate" label="推荐方比例" min-width="150">
                <template scope="scope">
                    {{scope.row.recommendRate.mul(100)}}%
                </template>
            </el-table-column>
            <el-table-column prop="status" label="操作" min-width="150">
                <template scope="scope">
                    <el-button @click="addTag('编辑',scope.$index,tableData)" type="primary" size="small">编辑</el-button>
                    <el-button @click="deleteRow(scope.$index,tableData)" type="danger" size="small">删除</el-button>
                </template>
            </el-table-column>
        </el-table>
        <!-- 信息表 -->

         <!--分页-->
        <div class="block">
            <el-pagination
                @size-change="handleSizeChange"
                @current-change="handleCurrentChange"
                :current-page="currentPage"
                :page-sizes="[10, 20, 30, 40]"
                :page-size="size"
                layout="total, sizes, prev, pager, next, jumper"
                :total="total">
            </el-pagination>
        </div>
        <!--分页-->

        <!--商品提成-->
        <el-dialog :title="title" :visible.sync="tag" size="">
            <el-form :model="form" style="width: 420px" label-width="100px">
                <el-form-item label="执行医院：">
                    <el-select v-model="form.hospital" style="width: 320px">
                        <el-option v-for="(item,index) in hospitalList" :key="index" :label="item.SupplierName" :value="item.SupplierName+'|'+item.Code"></el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="执行方比例：" prop="rate1" :rules="[{ type: 'number', message: '必须为数字值'}]" required>
                    <el-input type="rate1" v-model.number="form.rate1" style="width: 320px">
                        <template slot="append">%</template>
                    </el-input>
                </el-form-item>
                <el-form-item label="推荐方比例：" prop="rate2" :rules="[{ type: 'number', message: '必须为数字值'}]" required>
                    <el-input type="rate1" v-model.number="form.rate2" style="width: 320px">
                        <template slot="append">%</template>
                    </el-input>
                </el-form-item>
            </el-form>
            <div class="footer_ope">
                <el-button @click="sure" type="primary">确定</el-button>
                <el-button @click="cancel">取消</el-button>
            </div>
        </el-dialog>
    </div>
</template>

<script type="text/ecmascript-6">
    import {baseImgPath} from "@/config/env"
    import  "@/style/selfCommon.less"
    import { getCookie, delCookie } from '@/config/mUtils'
    import {AddHospitalSet,DeleteHospitalSet,GetHospitalSet,UpdateHospitalSet,GetSupplierBySupTypeCode} from "@/api/myData"
    export default {
        // name: "propAllocate",
        data () {
            return {
                title:"",
                tag:false,
                total:0,
                size:10,
                currentPage:1,
                hospitalList:[],
                formInline: {
                    keywords: '',
                    typeCode:''
                },
                form:{
                    hospital:'',
                    rate1:'',
                    rate2:''
                },
                tableData:[],
            }
        },
        computed: {
            /* 导出报表参数 tHeader,filterVal,tableData1*/
            tHeader(){
                return ['封面', '主题', '发布人', '标签', '视频大小', '发布时间', '浏览人次', '平均浏览时长', '分享','销售额',"商品提成"]
            },
            filterVal(){
                return ['picture', 'title', 'userName', 'tab', 'videoSize','createDate','views','grade','grade','ReferrerName']
            },
            tableData1(){
                return this.tableData
            },
            name(){
                return '视频管理'
            },
            /*导出报表参数 tHeader,filterVal,tableData1*/
        },
        mounted(){
            this.onSubmit()
        },
        methods:{
            async AddHospitalSet(params){
                try{
                    let res = await AddHospitalSet(params)
                    if(res.status){
                        this.$message({message: '添加成功', type: 'success'});
                        this.onSubmit()
                        this.tag = false
                    }else{
                        this.$message.error('添加失败');
                    }
                }catch(err){
                    console.log(err)
                    this.$message.error('添加失败');
                }
            },
            async DeleteHospitalSet(params){
                try{
                    let res = await DeleteHospitalSet(params)
                    if(res.status){
                        this.$message({message: '删除成功', type: 'success'});
                        this.onSubmit()
                    }else{
                        this.$message.error('删除失败');
                    }
                }catch(err){
                    console.log(err)
                    this.$message.error('删除失败');
                }
            },

            async GetHospitalSet(params){
                try{
                    let res = await GetHospitalSet(params)
                    this.hospitalList = await GetSupplierBySupTypeCode({SupTypeCode: "001"});
                    this.tableData = res.data
                    this.total = res.count
                }catch(err){
                    console.log(err)
                }
            },
            async UpdateHospitalSet(params){
                try{
                    let res = await UpdateHospitalSet(params)
                    if(res.status){
                        this.$message({message: '编辑成功', type: 'success'});
                        this.onSubmit()
                        this.tag = false
                    }else{
                        this.$message.error('编辑失败');
                    }
                }catch(err){
                    console.log(err)
                    this.$message.error('编辑失败');
                }
            },
     /*       numCheck(){
                var parnt = /^[1-9]\d*(\.\d+)?$/;
                if(!parnt.exec(this.form.rate1)){
                    alert("必须输入合同金额(数字)!");
                    return false;
                }
            },*/
            onSubmit(){
                this.currentPage = 1
                this.search()
            },
            search(){
                this.GetHospitalSet({
                    pageIndex:this.currentPage,
                    pageSize:this.size,
                    keywords:this.formInline.keywords.removeSP()
                })
            },
            handleSizeChange(val) {
                console.log(`每页 ${val} 条`);
                this.size = val
                this.onSubmit()
            },
            handleCurrentChange(val) {
                console.log(`当前页: ${val}`);
                this.currentPage = val
                this.onSubmit()
            },

            sure(){
                if (this.title == "编辑") {
                    this.UpdateHospitalSet({
                        id: this.form.id,
                        "hospitalExecutive": this.form.hospital.split("|")[1],
                        "executiveName": this.form.hospital.split("|")[0],
                        "rate": Number(this.form.rate1).div(100),
                        "recommendRate": Number(this.form.rate2).div(100),
                        "modifiedUserId": getCookie("userId"),
                        "modifiedBy": getCookie("userName")
                    })
                } else {
                    this.AddHospitalSet({
                        "hospitalExecutive": this.form.hospital.split("|")[1],
                        "executiveName": this.form.hospital.split("|")[0],
                        "rate":Number(this.form.rate1).div(100),
                        "recommendRate": Number(this.form.rate2).div(100),
                        "createUserId": getCookie("userId"),
                        "createBy": getCookie("userName")
                    })
                }
            },
            cancel(){
                this.tag = false
            },

            addTag(ope,index,data){
                
                this.reset()
                this.tag = true
                this.title = ope
                if(data){
                    let mes= JSON.parse(JSON.stringify(data[index]))
                    this.form={
                        id:data[index].id,
                        hospital:mes.executiveName+"|"+mes.hospitalExecutive,
                        rate1:mes.rate.mul(100),
                        rate2:mes.recommendRate.mul(100)
                    }
                }
            },
//            删除
            deleteRow(index,data){
                this.$confirm('此操作将永久删除该数据, 是否继续?', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    
                    this.DeleteHospitalSet({
                        id:data[index].id
                    })
                }).catch(() => {

                });
            },
            reset(){
                for(var p in this.form){
                    this.form[p] = ""
                }
            }
        },
        components: {
        }
    }
</script>

<!-- Add "scoped" attribute to limit CSS to this component only -->
<style scoped>

</style>
