<template>
    <div class="selCommon MemberManage">
        <el-form :inline="true" :model="formInline" class="demo-form-inline form_search" label-width="85px">
            <el-form-item label="日期：" class="form_item_mt10">
                <el-date-picker
                    v-model="date"
                    type="date"
                    class="form_sear_ipt"
                    @change="dateSelect"
                    placeholder="选择日期范围">
                </el-date-picker>
            </el-form-item>
           
            <el-form-item label="医院：" class="form_item_mt10">
                <el-select v-model="formInline.hospital" class="form_sear_ipt" @change="onSubmit">
                    <el-option v-for="(item,index) in hospitalList" :key="index" :label="item.supplierName" :value="item.code"></el-option>
                </el-select>
            </el-form-item>
             <el-form-item label="关键字：" class="form_item_mt10">
                <el-input v-model="formInline.keywords" placeholder="" class="form_sear_ipt"  v-on:keyup.enter.native="onSubmit"></el-input>
            </el-form-item>
            <el-form-item label=" " class="form_item_mt10">
                <el-button type="primary" @click="onSubmit" class="searchBtn">查询</el-button>
                <el-button type="primary" @click="onSubmit">一键确认</el-button>
                <el-button type="primary" @click="onSubmit">一键撤回</el-button>
                <el-button type="" @click="GetServiceTeamMap('')">组织图</el-button>
            </el-form-item>
        </el-form>
        <!-- 信息表 -->
        <el-table :data="tableData" border style="width: 100%;margin-top:15px;margin-bottom:10px" class="smt min_table"  v-loading="loading">
            <el-table-column prop="serviceInfoName" width="120" label="姓名" >
                <template scope="scope">
                    <el-button type="text" @click="det(scope.row.serviceCode)">{{scope.row.serviceInfoName}}</el-button>
                </template>
            </el-table-column>
            <el-table-column prop="oldServiceGrade" min-width="100" label="当前等级"  align="center">
               <template scope="scope">
                    <span v-if="scope.row.oldServiceGrade == 1">总监</span>
                    <span v-if="scope.row.oldServiceGrade == 2">经理</span>
                    <span v-if="scope.row.oldServiceGrade == 3">科长</span>
                    <span v-if="scope.row.oldServiceGrade == 4">组长</span>
                    <span v-if="scope.row.oldServiceGrade == 5">美导</span>
                </template>
            </el-table-column>
            <el-table-column prop="newServiceGrade" label="变更等级" min-width="100" align="center">
                <template scope="scope">
                    <span v-if="scope.row.newServiceGrade == 1">总监</span>
                    <span v-if="scope.row.newServiceGrade == 2">经理</span>
                    <span v-if="scope.row.newServiceGrade == 3">科长</span>
                    <span v-if="scope.row.newServiceGrade == 4">组长</span>
                    <span v-if="scope.row.newServiceGrade == 5">美导</span>
                </template>
            </el-table-column>
            
            <el-table-column prop="isConfirm" label="是否变更" min-width="120" align="center">
                <template scope="scope">
                    <el-tag type="warning" v-if="scope.row.isConfirm == 0">未变更</el-tag>
                    <el-tag type="success" v-if="scope.row.isConfirm == 1">已变更</el-tag>
                </template>
            </el-table-column>
            
            <!-- <el-table-column prop="sex" label="团队" min-width="100">
                <template scope="scope">
                    <el-button @click="GetServiceTeamMap(scope.row.serviceCode)" type="text" size="small"></el-button>
                </template>
            </el-table-column> -->
            <!-- <el-table-column prop="referrerName" label="本月业绩" min-width="180"></el-table-column> -->
            <el-table-column prop="oldRefServiceInfoName" label="对调人" min-width="150"></el-table-column>
            <el-table-column prop="IsAuth" label="操作" min-width="140" align="center">
                <template scope="scope">
                    <el-button @click="serviceObj(scope.row)" type="primary" size="small">更换等级</el-button>
                    <el-button @click="Revoke(scope.row)" type="primary" size="small">撤回</el-button>
                    <el-button type="primary" size="small" @click="GetServiceTeamMap(scope.row.serviceCode)">团队</el-button>
                </template>
            </el-table-column>
        </el-table>
        <!-- 信息表 -->

        <!-- 分页 -->
        <div class="block">
            <el-pagination
                @size-change="handleSizeChange"
                @current-change="handleCurrentChange"
                :current-page="currentPage"
                :page-sizes="[10, 20, 30, 40]"
                :page-size="size"
                layout="total, sizes, prev, pager, next, jumper"
                :total="total">
            </el-pagination>
        </div>
        <!-- 分页 -->

        <el-dialog title="服务商详情" :visible.sync="dialogTableVisibleD" size="" :close-on-click-modal="false" top="20%">
            <det style="width: 800px" v-if="dialogTableVisibleD" :mes="mes"></det>
        </el-dialog>
        <el-dialog title="组织结构图" :visible.sync="dialogStructure" size="" :close-on-click-modal="false" top="10%">
            <div style="max-width:1200px;max-height:600px;overflow:auto">
                <!-- <Vue2OrgTree v-if="dialogStructure" v-loading="treeLoading"
                    :data="treeData"
                    :props="props"
                    :collapsable="collapsable"
                ></Vue2OrgTree> -->
                <!-- landscape 竖向 没有该类名为横向-->
                <tree :json="treeData" class="treeModel"/>
            </div>
        </el-dialog>
        
    </div>
</template>

<script type="text/ecmascript-6">
import tree from "vue-tree-chart"
    // import Vue2OrgTree from 'vue2-org-tree'
    import  "../../../style/selfCommon.less"
    import { xmxUrl } from '@/config/env'
    import det from "./com/memberDet"
    import {GetDropDownPermission,GetServiceChangeLogList,ConfirmServiceChange,GetServiceTeamMap} from "@/api/myData"
    import { getStore } from '@/config/mUtils';
    export default {
        data () {
            return {
                treeData:{
                },
                // treeData: {},
                props: {
                    label: 'text', // 指定label对应的key
                    expand: 'close', // 指定展开|折叠对应的key
                    children: 'children' // 指定children对应的key
                },
                dialogStructure:false,
                collapsable:false,
                xmxUrl,
                treeLoading:false,
                loading:true,
                mes:{},
                dialogTableVisibleD:false,
                total:10,
                size:10,
                currentPage:1,
                hospitalList:[],
                date:"",
                formInline:{
                    date1:"",
                    date2:"",
                    hospital:'',
                    keywords:'',
                },
                tableData:[],
            }
        },
        computed: {
           
        },
        
        mounted(){
           this.getHospital()
        },
        methods:{
            GetServiceTeamMap(code){
                this.treeData = {}
                this.dialogStructure = true
                GetServiceTeamMap({code:code,HospitalCode:this.formInline.hospital}).then(res=>{
                    console.log(res)
                    res.data.forEach(row=>{
                        row.resourcesId = row.code,
                        row.gradeName = this.getGradeName(row.serviceGrade),
                        row.resName = row.serviceInfoName+'\n('+row.gradeName+')',
                        row.resParentId = row.referrerCode?row.referrerCode:0
                    })
                    debugger
                    if(res.data.length>1){
                        let data = this.format(res.data,code?code:0)
                        debugger
                        if(code){
                            debugger
                            this.treeData = data
                        }else{
                            this.treeData = {
                                name:'芯美昕',
                                resourcesId:0,
                                resParentId:1,
                                children:data
                            }  
                        }
                    }
                })
            },
            getGradeName(grade){
                if(!grade){
                    return ''
                }
                switch(grade){
                    case 1: return '总监' 
                    break;
                    case 2:return '经理'
                    break;
                    case 3:return '科长'
                    break;
                    case 4:return '组长'
                    break;
                    case 5:return '美导'
                    break;
                }
            },
            format(data,pId) {
                let resData = data;
                let tree = [];
                for (let i = 0; i < resData.length; i++) {
                    if (resData[i].resParentId === pId) {
                        let obj = {
                            id: resData[i].resourcesId,
                            name: resData[i].resName,
                        };
                        tree.push(obj);
                        resData.splice(i, 1);
                        i--;
                    }
                }
                debugger
                run(tree);
                function run(chiArr) {
                    if (resData.length !== 0) {
                        for (let i = 0; i < chiArr.length; i++) {
                            for (let j = 0; j < resData.length; j++) {
                                if (chiArr[i].id === resData[j].resParentId) {
                                    let obj = {
                                        id: resData[j].resourcesId,
                                        name: resData[j].resName,
                                        // children: []
                                    };
                                    if(!chiArr[i].children){
                                        chiArr[i].children = []
                                    }
                                    chiArr[i].children.push(obj);
                                    resData.splice(j, 1);
                                    j--;
                                }
                            }
                            if(chiArr[i].children) run(chiArr[i].children)
                            // console.log(chiArr[i].children);
                            ;
                        }
                    }
                }
                debugger
                if(pId != 0){
                    resData[0].name = resData[0].serviceInfoName
                    resData[0].children = tree
                    tree = resData[0]
                }
                return tree;
            },
            serviceObj(data){
                this.$confirm('是否确定要迁移？', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    this.ConfirmServiceChange({
                        id:data.id
                    })
                })
            },
            async ConfirmServiceChange(params){
                let res = await ConfirmServiceChange(params)
                if(res.status){
                    this.$message({ type: 'success', message: '更换成功' })
                    this.search()
                }else{
                    this.$message({ type: 'warning', message: '更换失败!'+res.errorMessage })
                }
            },
            async getHospital(params){
                try {
                    let [res1] = await Promise.all([GetDropDownPermission({typeId: 1})])
                    this.hospitalList = res1.data
                    this.formInline.hospital = this.hospitalList[0].code
                    this.search()
                } catch (err) {
                    console.log(err)
                }
            },
//            获取会员
            async GetServiceChangeLogList(params){
                try {
                    let res = await GetServiceChangeLogList(params)
                    this.loading = false
                    this.total = res.count
                    this.tableData = res.data
                } catch (err) {
                    console.log(err)
                }
            },

            onSubmit(){
                this.currentPage = 1
                this.search()
            },
           
            search(){
                this.loading = true
                this.GetServiceChangeLogList({
                    'pageIndex':this.currentPage,
                    'pageSize':this.size,
                    "keywords": this.formInline.keywords,
                    'hospitalCode':this.formInline.hospital,
                    "commissionDate": this.formInline.date1,
                })
            },
            dateSelect(val){
                if(val){
                    this.formInline.date1 = val
                }else{
                    this.formInline.date1 = ""
                }
                this.onSubmit()
            },
       
            handleSizeChange(val) {
                this.size = val
                this.search()
            },
            handleCurrentChange(val) {
                this.currentPage = val
                this.search()
            },
            
            det(data){
                this.dialogTableVisibleD = true
                this.mes = {code:data}
            },
        },
        components: {
            det,
            tree,
            // Vue2OrgTree
        }
    }
</script>

<!-- Add "scoped" attribute to limit CSS to this component only -->
<style scoped>

</style>
