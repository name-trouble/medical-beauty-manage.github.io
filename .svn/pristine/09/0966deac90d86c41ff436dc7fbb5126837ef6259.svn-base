<template>
    <div>
        <div class="mes">
            <div class="mes_left">
                <div class="column">
                    <span class="wt150">姓名：{{customer.MemberName}}</span>
                    <!-- <span class="wt150">编号：{{mes.}}</span> -->
                </div>
                <div class="column">
                    <span class="wt150">性别：{{customer.Sex}}</span>
                    <span class="wt150">生日：{{customer.Birthday}}</span>
                    <span class="wt200">联系方式：{{customer.PhoneNumber}}</span>
                </div>
                <div class="column">
                    <span class="wt300">推荐人：{{customer.ReferrerName}}[{{customer.ReferrerCode}}]</span>
                    <span class="wt200">设计师：{{mes.designerName}}</span>
                </div>
                <div class="column">
                    <span>地址：{{customer.Address}}</span>
                </div>
                <div class="column">
                    <span>标签：{{customer.MemberTags}}</span>
                </div>
            </div>
            <div class="mes_right">
                <div class="column">
                    <span>回访内容：{{mes.visitContent}}</span>
                </div>
                <div class="column">
                    <span class="ipt_lab">回访记录：</span>
                    <span style="display:inline-block"><el-input type="textarea" v-model="newRecord" :rows="4" style="width:300px;"></el-input></span>
                </div>
                 <div class="column">
                    <span class="ipt_lab">是否满意：</span>
                    <span>
                        <el-radio class="radio" v-model="Satisfied" label="1">满意</el-radio>
                        <el-radio class="radio" v-model="Satisfied" label="0">不满意</el-radio>
                    </span>
                     <span v-if="Satisfied == 0">
                         <el-select v-model="kf">
                            <el-option v-for="(item,index) in kfList" :key="index" :label="item.text" :value="item.name+'|'+item.code"></el-option>
                        </el-select>
                    </span>
                </div>
                 <div class="column" style="margin-top:10px">
                    <el-button type="primary" @click="save">保存</el-button>
                    <el-button type="primary" @click="creat">新建回访</el-button>
                    <el-button type="" @click="cancel">取消</el-button>
                    <el-button type="success" @click="openSend" :disabled="!customer.PhoneNumber">发送短信</el-button>
                </div>
            </div>
            <div style="clear: both;"></div>
        </div>
        <ul style="margin-top:20px">
            <li class="tabs"  v-for="(item,index) in list" :class="{'active':currentIndex == item.state}" :key="index" @click="select(index,item.state)">{{item.name}}</li>
        </ul>
         <el-table :data="tableData" border style="width: 100%;margin-top:20px" v-show="currentIndex == 0" class="min_table4" max-height="500"
          :row-class-name="tableRowClassName">
<!-- 回访记录 -->
            <el-table-column prop="serviceName" label="联系人" min-width="150"></el-table-column>
            <el-table-column prop="visitContent" label="回访内容" min-width="180"></el-table-column>
            <el-table-column prop="visitRecord" label="回访结果"  min-width="150"> </el-table-column>
            <el-table-column prop="date" label="下次回访时间" min-width="120"></el-table-column>
            <el-table-column prop="createOn" label="回访时间" min-width="120">
                 <template scope="scope">
                    <span v-if="scope.row.createOn">{{scope.row.createOn.substring(0,10)}}</span>
                </template>
            </el-table-column>
            <el-table-column prop="visitDate" label="回访设置时间" min-width="120">
                 <template scope="scope">
                    <span v-if="scope.row.visitDate">{{scope.row.visitDate.substring(0,10)}}</span>
                </template>
            </el-table-column>
            <el-table-column prop="visitStatus" label="回访状态" min-width="120">
                <template scope="scope">
                    <span v-if="scope.row.visitStatus == 1">待回访</span>
                    <span v-if="scope.row.visitStatus == 2">已回访</span>
                </template>
            </el-table-column>
        </el-table>
<!-- 咨询内容 -->
         <el-table :data="tableData" border style="width: 100%;margin-top:20px"  v-show="currentIndex == 1" class="min_table smt" max-height="500"
          :row-class-name="tableRowClassName">
            <el-table-column prop="consultingDate" label="咨询日期" min-min-width="120">
                <template scope="scope">
                    <span v-if="scope.row.consultingDate">{{scope.row.consultingDate.substring(0,10)}}</span>
                </template>
            </el-table-column>
            <el-table-column prop="projectName" label="项目" min-width="150"> </el-table-column>
            <el-table-column  prop="doctor" label="医生" min-width="120"></el-table-column>
            <el-table-column  prop="designerName" label="设计师" min-width="120"></el-table-column>
            <el-table-column  prop="designerAssistName" label="设计师助理" min-width="120"></el-table-column>
            <el-table-column  prop="consultingName" label="咨询分类" min-width="110"> </el-table-column>
            <el-table-column  prop="consultingContent" label="内容" min-width="180" show-overflow-tooltip></el-table-column>
        </el-table>
        <!-- 订单情况 -->
        <el-table :data="tableData" border style="width: 100%;margin-top:20px" v-show="currentIndex == 7" 
         class="min_table smt" max-height="500" :row-class-name="tableRowClassName">
            <el-table-column prop="fxCode" label="订单编号" min-width="120"></el-table-column>
            <el-table-column prop="orderDate" label="订单日期" min-width="120">
                <template scope="scope">
                    <span v-if="scope.row.orderDate">{{scope.row.orderDate.substring(0,10)}}</span>
                </template>
            </el-table-column>
            <el-table-column prop="projectName" label="执行项目" min-width="160"> </el-table-column>
            <el-table-column prop="goodsUnitName" label="规格" min-width="140"></el-table-column>
            <el-table-column prop="commandState" label="执行状态" min-width="120">
                <template scope="scope">
                    <el-tag type="gray" v-if="scope.row.commandState == 0">未执行</el-tag>
                    <el-tag type="warning" v-if="scope.row.commandState == 1">执行中</el-tag>
                    <el-tag type="success" v-if="scope.row.commandState == 2">执行完毕</el-tag>
                </template>
            </el-table-column>
            <el-table-column prop="course" label="疗程" min-width="80">
                <template scope="scope">
                    <span v-if="scope.row.currentCourse">
                        {{scope.row.currentCourse}} /
                    </span>
                    <span v-if="!scope.row.currentCourse">
                        0 /
                    </span>
                    <span v-if="scope.row.course">
                        {{scope.row.course}}
                    </span>
                </template>
            </el-table-column>
            <el-table-column prop="isPayOff" label="付款状态" min-width="80">
                <template scope="scope">
                    <el-tag type="success" v-if="scope.row.isPayOff == true">已付清</el-tag>
                   <el-tag type="danger" v-if="scope.row.isPayOff == false">未付清</el-tag>
                </template>
            </el-table-column>
             <el-table-column prop="approveState" label="订单状态" min-width="90">
                <template scope="scope">
                    <el-tag type="warning" v-if="scope.row.approveState==0||scope.row.approveState==null">未审核</el-tag>
                    <el-tag v-if="scope.row.approveState==1">部分审核</el-tag>
                    <el-tag type="success" v-if="scope.row.approveState==2">审核完毕</el-tag>
                     <el-tag type="danger" v-if="scope.row.approveState==6">已退款</el-tag>
                    <el-tag type="danger" v-if="scope.row.approveState == 10">已关闭</el-tag>
                </template>
            </el-table-column>
            <el-table-column prop="createBy" label="登记人" min-width="100"> </el-table-column>
            <el-table-column prop="goodsUnitName" label="操作" min-width="100">
                <template scope="scope">
                    <el-button type="primary" size="small" @click="viewPhoto(scope.row)">查看照片</el-button>
                </template>
            </el-table-column>
        </el-table> 
<!-- 执行情况 -->
         <el-table :data="tableData" border style="width: 100%;margin-top:20px" v-show="currentIndex == 2" 
         class="min_table4" max-height="500" :row-class-name="tableRowClassName">
            <el-table-column prop="orderDate" label="订单日期" min-width="120">
                <template scope="scope">
                    <span v-if="scope.row.orderDate">{{scope.row.orderDate.substring(0,10)}}</span>
                </template>
            </el-table-column>
            <el-table-column prop="projectName" label="执行项目" min-width="160"> </el-table-column>
            <el-table-column prop="goodsUnitName" label="规格" min-width="140"></el-table-column>
            <el-table-column prop="commandState" label="执行状态" min-width="120">
                <template scope="scope">
                    <el-tag type="gray" v-if="scope.row.commandState == 0">未执行</el-tag>
                    <el-tag type="warning" v-if="scope.row.commandState == 1">执行中</el-tag>
                    <el-tag type="success" v-if="scope.row.commandState == 2">执行完毕</el-tag>
                    <el-tag type="success" v-if="scope.row.commandState == 3">新系统已执行</el-tag>
                </template>
            </el-table-column>
            <el-table-column prop="execDate" label="执行日期" min-width="110">
                <template scope="scope">
                    <span v-if="scope.row.execDate">
                        {{scope.row.execDate.substring(0,10)}}
                    </span>
                </template>
            </el-table-column>
            <el-table-column prop="doctorName" label="治疗医生" min-width="100"></el-table-column>
            <el-table-column prop="createBy" label="登记人" min-width="100"> </el-table-column>
        </el-table>
<!-- 预约 -->
         <el-table :data="tableData" border style="width: 100%;margin-top:20px" v-show="currentIndex == 3" class="min_table4" max-height="500"  
         :row-class-name="tableRowClassName">
            <el-table-column prop="reservationDate" width="120" label="预约日期" >
                <template scope="scope">
                    <span v-if="scope.row.reservationDate">
                        {{scope.row.reservationDate.substring(0,10)}}
                    </span>
                </template>
            </el-table-column>
            <el-table-column prop="MemberName" label="时间段" min-width="120">
                 <template scope="scope">
                    <span v-if="scope.row.startTime">
                        {{scope.row.startTime}}-{{scope.row.endTime}}
                    </span>
                 </template>
            </el-table-column>
            <el-table-column prop="deptName" label="科室" min-width="120"></el-table-column>
            <el-table-column prop="doctorName" label="预约医生" min-width="120"></el-table-column>
            <el-table-column prop="projectName" label="项目" min-width="120"></el-table-column>
            <el-table-column prop="reservationStatus" label="状态" min-width="120">
                <template scope="scope">
                    <span v-if="scope.row.reservationStatus == 1">未来院</span>
                    <span v-if="scope.row.reservationStatus == 2">手术中</span>
                    <span v-if="scope.row.reservationStatus == 3">已完成</span>
                </template>
            </el-table-column>
        </el-table>
<!-- 支付情况 -->
         <el-table :data="tableData" border style="width: 100%;margin-top:20px" v-show="currentIndex == 4" class="min_table4" max-height="500"
          :row-class-name="tableRowClassName">
            <el-table-column prop="payType" min-width="140" label="支付方式" >
                <template scope="scope">
                    {{scope.row.payType|filterFun}}
                </template>
            </el-table-column>
            <el-table-column prop="realAmount" label="支付金额" min-width="120">
                
            </el-table-column>
            <el-table-column prop="receiveAccount" label="收款账户" min-width="120"></el-table-column>
            <el-table-column prop="payDate" label="支付日期" min-width="120">
                <template scope="scope">
                    <span v-if="scope.row.payDate">
                        {{scope.row.payDate.substring(0,10)}}
                    </span>
                </template>
            </el-table-column>
            <el-table-column prop="memo" label="备注" min-width="120"></el-table-column>
        </el-table>
        <!-- 券使用情况 -->
         <el-table :data="tableData" border style="width: 100%;margin-top:20px" v-show="currentIndex == 5" class="min_table4" max-height="500"
          :row-class-name="tableRowClassName">
            <el-table-column prop="payType" min-width="120" label="支付方式" >
                <template scope="scope">
                    {{scope.row.payType|filterFun}}
                </template>
            </el-table-column>
            <el-table-column prop="ticketsCode" label="券号" min-width="120"></el-table-column>
            <el-table-column prop="realAmount" label="支付金额" min-width="120"></el-table-column>
            <el-table-column prop="payDate" label="支付日期" min-width="120">
                <template scope="scope">
                    <span v-if="scope.row.payDate">
                        {{scope.row.payDate.substring(0,10)}}
                    </span>
                </template>
            </el-table-column>
            <el-table-column prop="memo" label="备注" min-width="120"></el-table-column>
        </el-table>
         <!-- 处方单 -->
         <el-table :data="tableData" border style="width: 100%;margin-top:20px" v-show="currentIndex == 6" class="min_table4" max-height="500"
          :row-class-name="tableRowClassName">
            <el-table-column prop="orderProductCode" min-width="110" label="订单编号" ></el-table-column>
            <el-table-column prop="createOn" label="订单日期" min-width="110">
                <template scope="scope">
                    <span v-if="scope.row.createOn">{{scope.row.createOn.substring(0,10)}}</span>
                </template>
            </el-table-column>
            <el-table-column prop="diagnosis" label="临床诊断" min-width="110"></el-table-column>
            <el-table-column prop="unitName" label="规格" min-width="100"></el-table-column>
            <el-table-column prop="productName" label="药品名称" min-width="110"></el-table-column>
            <el-table-column prop="quantity" label="数量" min-width="80"></el-table-column>
            <el-table-column prop="price" label="价格" min-width="80">
                 <template scope="scope">
                    <span v-if="scope.row.price">{{scope.row.price.toQFW()}}</span>
                </template>
            </el-table-column>
            <el-table-column prop="dwName" label="单位" min-width="80"></el-table-column>
            <el-table-column prop="realAmount" label="实收金额" min-width="90">
                <template scope="scope">
                    <span v-if="scope.row.realAmount">{{scope.row.realAmount.toQFW()}}</span>
                </template>
            </el-table-column>
            <el-table-column prop="nurseName" label="服务者" min-width="100"></el-table-column>
        </el-table>
         <!-- 套餐情况 -->
         <el-table :data="tableData" border style="width: 100%;margin-top:20px" v-show="currentIndex == 8" class="min_table smt" max-height="500"
          :row-class-name="tableRowClassName">
            <el-table-column prop="ConPacName" label="套餐名称" min-width="100"></el-table-column>
            <el-table-column prop="TickName" label="券名称" min-width="120"></el-table-column>
            <el-table-column prop="TicNum" label="数量" min-width="80"></el-table-column>
            <el-table-column prop="UseCount" label="单张使用次数" min-width="80"></el-table-column>
            <el-table-column prop="UsedTimes" label="已用次数" width="150">
                <template scope="scope">
                    <span v-if="scope.row.UsedTimes">{{scope.row.UsedTimes}}</span>
                    <span v-else>0</span>
                </template>
            </el-table-column>
            <el-table-column prop="IsUserLimit" label="有效期" min-width="120">
                <template scope="scope">
                    <span v-if="scope.row.PrdOfVal!='' && scope.row.PrdOfVal!=null "> {{ '售后'+ scope.row.PrdOfVal +'天'}}</span>
                    <div v-else>
                        <p>开始：{{ scope.row.StartDate&&scope.row.StartDate.substr(0,10) }} </p>
                        <p>结束：{{ scope.row.EndDate&&scope.row.EndDate.substr(0,10) }} </p>
                    </div>
                </template>
            </el-table-column>
        </el-table>
    <span style="font-size:14px;font-weight:bold">
        红色为原系统数据
    </span>
        <el-dialog ref="pay" title="新建回访" :visible.sync="visit" top="5%" size="" :modal="false">
            <el-form :model="visitForm"  ref="visitForm" label-width="100px" class="demo-ruleForm" style="width:400px">
                <el-form-item label="回访时间：" prop="pass" class="form_item_mt10">
                    <el-date-picker type="date" placeholder="选择日期" v-model="visitForm.dateInit" style="width: 220px;"></el-date-picker>
                </el-form-item>
                <el-form-item label="客服：" prop="checkPass" class="form_item_mt10">
                    <el-select v-model="visitForm.kf" style="width: 220px;">
                        <el-option v-for="(item,index) in kfList" :key="index" :label="item.text" :value="item.name+'|'+item.code"></el-option>
                    </el-select>
                    <!-- <el-input type="password" v-model="visitForm.kf" auto-complete="off"></el-input> -->
                </el-form-item>
                <el-form-item label="回访内容：" prop="age" class="form_item_mt10">
                    <el-input type="textarea" v-model="visitForm.content" :rows="4" ></el-input>
                </el-form-item>
            </el-form>
            <div class="form_footer">
                <el-button type="primary" @click="submitForm('visitForm')" :loading="saveLoading">提交</el-button>
                <el-button @click="resetForm('visitForm')">取消</el-button>
            </div>
        </el-dialog>
        <el-dialog title="手术照片" :visible.sync="dialogFormVisible" :modal="false" size="">
            <el-form label-width="100px" style="width:640px;max-height:480px;overflow-y: auto;">
                <el-form-item label="术前：" class="form_item_mt0">
                    <span class="imgContainer" v-for="(item,index) in fileList1" :key="index">
                        <img width="100px" :src="item.url" alt="">
                    </span>
                </el-form-item>
                <el-form-item label="术中：" class="form_item_mt0">
                    <span class="imgContainer" v-for="(item,index) in fileList2" :key="index">
                        <img width="100px" :src="item.url" alt="">
                    </span>
                </el-form-item>
                <el-form-item label="术后：" class="form_item_mt0">
                    <span class="imgContainer" v-for="(item,index) in fileList3" :key="index">
                        <img width="100px" :src="item.url" alt="">
                    </span>
                </el-form-item>
            </el-form>
        </el-dialog>
        <el-dialog title="发送短信" :visible.sync="messageDialog" :modal="false" size="">
            <el-form label-width="100px" style="width:500px;max-height:480px;overflow-y: auto;">
                <el-form-item label="收件人：" class="form_item_mt0">
                    <el-input v-model="customer.MemberName" style="width:200px;"></el-input>
                </el-form-item>
                <el-form-item label="电话：" class="form_item_mt0">
                    <el-input v-model="visitForm.mobile" style="width:200px;"></el-input>
                </el-form-item>
                <!-- <el-form-item label="信息类型：" class="form_item_mt0">
                    <el-select v-model="visitForm.type" @change="mesTypeChange" style="width:200px;">
                        <el-option v-for="(item,index) in mesList" :key="index" :label="item.stTypeName" :value="item.stType"></el-option>
                    </el-select>
                </el-form-item> -->
                <el-form-item label="信息预览：" class="form_item_mt10">
                    <div>{{visitForm.message}}</div>
                    <!-- <el-input  type="textarea" :autosize="{ minRows: 4, maxRows: 6}" v-model="visitForm.message"></el-input> -->
                </el-form-item>
            </el-form>
            <div class="form_footer">
                <el-button type="primary" @click="sureSend('visitForm')" :loading="saveLoading">发送</el-button>
                <el-button @click="cancelSend('visitForm')">取消</el-button>
            </div>
        </el-dialog>
    </div>
</template>

<script>
    import {getUserById,GetServiceManList,AddVisit,GetOrderProductByCus,HuiFangList,GetZiXunList,GetOrderCommandByCus2,GetBranchByCode,GetPhotoByFxCode,
    GetOrderCommandByCus,GetUserAllByKeywords,zhixing,YuYueList,GetZhiFuList,GetPayAllByCustomeId,GetChuFangList,getBaseDataByCode,SendMsg,GetSpeechTech,
    GetConsultingByCustomerCode,GetReservationByCustomerCode,GetVisitByCus,UpdateVisit} from "@/api/myData"
    import { getCookie } from "@/config/mUtils";
    var _this 
    export default {
        props:{
            mes:{
                type:Object
            }
        },
        data() {
            return {
                messageDialog:false,
                dialogFormVisible:false,
                saveLoading:false,
                fileList1:[],
                fileList2:[],
                fileList3:[],
                newRecord:"",
                Satisfied:"1",
                kf:"",
                visitForm:{
                    dateInit:"",
                    date:"",
                    content:"",
                    kf:"",
                    mobile:"",
                    message:'',
                    type:""
                },
                visit:false,
                customer:{},
                currentIndex:0,
                list:[{name:"回访记录",state:0},{name:'咨询内容',state:1},{name:'订单情况',state:7},{name:'执行情况',state:2},{name:'预约情况',state:3},
                {name:'支付情况',state:4},{name:'券使用情况',state:5},{name:'处方单',state:6},{name:'套餐情况',state:8}],
                tableData: [],
                total:0,
                payWays:[],
                kfList:[],
            }
        },
        watch:{

        },
        filters:{
            filterFun(val){
                let name
                if(val){
                     if(val.length>5){
                        name = val
                    }else{
                        _this.payWays.forEach(row=>{
                            if(row.DataCode == val){
                                name = row.DataName
                                return
                            }   
                        })
                    }
                    return name
                }
            }
        },
        mounted(){
            _this = this
            this.GetUserAllByKeywords()
        },
        methods: {
            
            openSend(){
                this.messageDialog = true
                let customer = this.customer,mes = this.mes
                this.visitForm.mobile = this.customer.PhoneNumber
                this.visitForm.message = `亲爱的${customer.MemberName}女士/先生，感谢您选择${mes.hospitalName}，项目操作后我们为您提供了一份专属注意事项，敬请遵医嘱执行，如有不适请及时联系本院客服（18966488519），我们将全心全意的为您提供优质的医疗服务，芯美昕期待您的再次光临。`  
            },
            async sureSend(params){
                let res = await SendMsg({
                    JsonStr:JSON.stringify({
                        mobile:this.visitForm.mobile,
                        hospitalcode:this.mes.hospitalCode,
                        username:this.customer.MemberName
                    })
                })
                if(res.status){
                    this.$message({ type: 'success', message: '发送成功!' })
                    this.messageDialog = false
                }else{
                    this.$message({ type: 'error', message: '发送失败!'+res.errorMessage })
                }
            },
            cancelSend(){
                this.messageDialog = false
            },
            viewPhoto(data){
                this.dialogFormVisible = true
                this.GetPhotoByFxCode({
                    FxCode:data.fxCode
                })
            },
            async GetPhotoByFxCode(params){
                let res = await GetPhotoByFxCode(params)
                this.picturesSplit(res.data)
            },
            // 图片分离
            picturesSplit(data){
                if(data){
                    this.fileList1 = []
                    this.fileList2 = []
                    this.fileList3 = []
                    data.forEach(ele=>{
                        // 术前
                        if(ele.photoType == 1){
                            this.fileList1.push({
                                name:ele.photoUrl,
                                url:baseImgPath+ele.photoUrl,
                            })
                        }
                        // 术中
                        if(ele.photoType == 2){
                            this.fileList2.push({
                                name:ele.photoUrl,
                                url:baseImgPath+ele.photoUrl,
                            })
                        }
                        // 术后
                        if(ele.photoType == 3){
                            this.fileList3.push({
                                name:ele.photoUrl,
                                url:baseImgPath+ele.photoUrl,
                            })
                        }
                    })
                }
            },
            async GetUserAllByKeywords(){
                let mes = await GetSpeechTech({hospitalcode:this.mes.hospitalCode})
                this.mesList = mes.data
                 this.payWays = await getBaseDataByCode("0006")
                let res = await GetUserAllByKeywords({keywords:this.mes.customerCode})
                
                if(res.length>0){
                    this.customer = res[0]
                    for(var p in this.customer){
                        if(this.customer[p] == null || this.customer[p] == undefined){
                            this.customer[p] =""
                        }
                    }
                    this.customer["Address"] = this.customer["Province"]+this.customer["City"]+this.customer["Area"]+this.customer["Address"].split(",").join("")
                    
                    if(this.customer["Sex"] == 0){
                        this.customer["Sex"] == "女"
                    }else{
                        this.customer["Sex"] == "男"
                    }
                }
                 this.getServer()
            },
           select(index,status){
                this.currentIndex = status
                if(status==0){
                    this.GetVisitByCus({CustomerCode:this.mes.customerCode})
                }
                if(status==1){
                   this.GetConsulting({
                       CustomerCode:this.mes.customerCode
                    })
                }
                if(status==2){
                    this.GetOrderCommandByCus2(this.mes.customerCode,status)
                }
                if(status==3){
                    this.GetReservation({
                        CustomerCode:this.mes.customerCode
                    })
                }
                if(status==4){
                    this.GetPayAllByCustomeId({
                        CustomerCode:this.mes.customerCode
                    })
                }
                if(status==5){
                    this.GetPayAllByCustomeId({
                        CustomerCode:this.mes.customerCode
                    },index)
                }
                if(status==6){
                    this.GetChuFangList({
                        outWhere :this.customer.CardNO
                    },index)
                }
                if(status==7){
                    this.GetOrderCommandByCus(this.mes.customerCode,status)
                }
                if(status==8){
                    this.GetBranchByCode({
                        branchcode:this.mes.customerCode
                    })
                }
            },
            // 预约
            async GetReservation(params){
                let res1 = await YuYueList({pageIndex:1,pageSize:1000, outwhere:this.mes.customerCode})
                 res1.data.forEach(row => {
                    row.doctorName = row["预约医生"]
                    row.deptName = row["预约科室"]
                    row.reservationStatus = this.getStatus(row["来院状态"])
                    row.reservationDate = row["预约日期"]
                    row.startTime = row["预约时间"]
                    row.projectName = row["预约内容"]
                    row.isNew = 1
                });
                let res =await GetReservationByCustomerCode(params)
                if(res.status){
                    this.total = res.count
                    this.tableData = res.data.concat(res1.data)
                }else{
                    console.log(res)
                }
            },
            getStatus(status){
                switch(status){
                    case "未来院": return 1;
                    case "手术中": return 2;
                    case "已完成": return 3;
                }
            },
            // 咨询
            async GetConsulting(params){
                let res1 = await GetZiXunList({pageIndex:1,pageSize:1000,outwhere:this.customer.CardNO})
                 res1.data.forEach(row => {
                    // row.consultingDate = row["预约医生"]
                    // row.projectName = row["预约科室"]
                    // row.designerName = this.getStatus(row["来院状态"])
                    row.consultingDate = row["ddt"]
                    row.consultingName = row["szxType"]
                    row.doctor = row.sys
                    row.consultingContent = row['scon']
                    // row.consultingContent = row["预约内容"]
                    row.isNew = 1
                });
                let res =await GetConsultingByCustomerCode(params)
                if(res.status){
                    this.total = res.count
                     this.tableData = res.data.concat(res1.data)
                    
                }else{
                    console.log(res)
                }
            },
            //回访记录
            async GetVisitByCus(params){
                let res1 = await HuiFangList({pageIndex:1,pageSize:1000,outwhere:this.mes.customerCode})
                res1.data.forEach(row => { 
                    row.date = row["下次回访时间"],
                    row.serviceName = row["客服专员"]
                    row.createOn = row["回访时间"]
                    row.visitContent = row["联系内容"]
                    row.visitRecord=row["联系结果"]
                    row.isNew = 1
                });
                let res = await GetVisitByCus(params)
                if(res.status){
                    this.total = res.count
                     this.tableData = res.data.concat(res1.data)
                }else{
                    console.log(res)
                }
            },
            //订单情况
            async GetOrderCommandByCus(code,status){
                let res = await GetOrderCommandByCus2({customerCode:code})
                if(res.status){
                    this.total = res.count
                    this.tableData = res.data
                }else{
                    console.log(res)
                }
            },
            //执行情况
            async GetOrderCommandByCus2(code,status){
                let res1 = await zhixing({pageIndex:1,pageSize:1000,outwhere:this.mes.customerCode})
                res1.data.forEach(row => {
                    row.orderDate = row["收费日期"],
                    row.projectName = row["治疗项目"]
                    row.goodsUnitName = row["规格"]
                    row.createBy = row["登记人"]
                    row.doctorName = row["主治医生"]
                    row.commandState = this.getCommand(row["执行状态"])
                    row.execDate = row["完成日期"]
                    row.isNew = 1
                });
                let res = await GetOrderCommandByCus({customerCode:code})
                if(res.status){
                    this.total = res.count
                    res.data.forEach(row=>{
                        row.commandState = 2
                    })
                    this.tableData = res.data.concat(res1.data)
                }else{
                    console.log(res)
                }
            },
            // 支付情况
            async GetPayAllByCustomeId(code,index){
                let res1 = await GetZhiFuList({pageIndex:1,pageSize:1000, outwhere:this.customer.CardNO})
                 res1.data.forEach(row => {
                    row.payType = row["消费摘要"]
                    row.payDate = row["日期"]
                    row.realAmount = row["消费金额"]
                    row.receiveAccount = row["收费员"]
                    row.isNew = 1
                });
                let res = await GetPayAllByCustomeId(code)
                let arr = []
                if(res.status){
                    this.total = res.count
                    if(index){
                        this.tableData = []
                        res.data.forEach(row=>{
                            if(row.payType == "008"||row.payType == "010"){
                                arr.push(row)
                            }
                        })
                    }else{
                        arr = res.data.concat(res1.data)
                    }
                    this.tableData = arr
                }else{
                    console.log(res)
                }
            },
        
            getCommand(status){
                switch(status){
                    case "未执行": return 0;
                    case "执行中": return 1;
                    case "已执行": return 2;
                    case "新系统已执行": return 3;
                }
            },
            // 处方单
            async GetChuFangList(params){
                let res1 = await GetOrderProductByCus({"CustomerCode":this.mes.customerCode})
                let res = await GetChuFangList({pageIndex:1,pageSize:1000,outwhere:this.customer.CardNO})
                res.data.forEach(row => { 
                    row.orderProductCode = row["yaoFang"]["fid"],
                    row.createOn = row["yaoFang"]["ddt"]
                    row.productName = row["yaoPing"]["sName"]
                    row.realAmount = Number(row["yaoPing"]["mMoney"])
                    row.quantity = row["yaoPing"]["fFactNum"]
                    row.nurseName=row["联系结果"]
                    row. diagnosis = row["yaoFang"]["szd"]
                    row.unitName = row["yaoPing"]["sSpec"]
                    row.price = Number(row["yaoPing"]["mPrice"])
                    row.dwName = row["yaoPing"]["sUnit"]
                    row.isNew = 1
                });
                this.tableData = res1.data.concat(res.data)
                
            },
            async GetBranchByCode(params){
                let res = await GetBranchByCode(params)
                if(res.Branch){
                    this.tableData = res.CPOList
                }else{
                    this.tableData = []
                }
            },  
            tableRowClassName(row, index) {
                if (row.isNew) {
                    return 'warning-row';
                } else {
                    return 'positive-row';
                }
                return '';
            },
            
            async getServer(){
                // let user = await getUserById(getCookie("userId"))
                // let hospital //查询本院code筛选本院医护
                // if(user.HospitalCode){
                //     hospital = user.HospitalCode
                // }else{
                //     hospital = "all"
                // }
                let res = await GetServiceManList(),des = []
                for(let item of res.data){
                    let hosCodes = item.hospitalCode.split(",")
                    if(item.serviceName == '崔莹'){
                        
                    }
                    if(hosCodes.indexOf(this.mes.hospitalCode)>=0){
                    //客服
                       if(item.serTypeCode == "009"){
                            this.kfList.push({
                                code: item["code"],
                                name: item["serviceName"],
                                text: item["serviceName"] + "(" + item["code"] + ")"
                            });
                        }
                        if(item.serTypeCode == "006"){
                            des.push({
                                code: item["code"],
                                name: item["serviceName"],
                                text: item["serviceName"] + "(" + item["code"] + ")"
                            });
                        }
                    }
                } 
                if(this.kfList.length == 0){
                   this.kfList = des
                }
                 this.select(0,0)
            },
            async UpdateVisit(params){
                let res = await UpdateVisit(params)
                if (res.status) {
                    this.$message({message: '保存成功',type: 'success'});
                    this.$emit("close",true)
                } else {
                    this.$message.error('保存失败');
                }
            },
            submitForm(forName){
                let kf = this.visitForm.kf.length>0?this.visitForm.kf.split("|")[0]:""
                let kfCode = this.visitForm.kf.length>0?this.visitForm.kf.split("|")[1]:""
                                let obj = {
                    "visitDate": this.visitForm.dateInit.formatDate( "yyyy-MM-dd" ),
                    "fxCode": this.mes.fxCode?this.mes.fxCode:'',
                    "visitContent": this.visitForm.content,
                    "visitStatus": 2,//1待回访 2 已回访
                    "serviceName": kf,//客服
                    "serviceCode": kfCode,
                    "createUserId": getCookie("userId"),
                    "createBy": getCookie("userName"),
                    'hospitalCode':getCookie("hospitalCode"),
                    'consultingId':this.mes.id?this.mes.id:''
                }
                this.AddVisit(obj)
            },
            resetForm(formName){
                // this.$refs[formName].resetFields();
                this.visit = false
                this.visitForm = {
                    dateInit:"",
                    date:"",
                    content:"",
                    kf:"",
                }
            },
            async AddVisit(params){
                this.saveLoading = true
                let res = await AddVisit(params)
                if (res.status) {
                    this.$message({message: '添加成功',type: 'success'});
                    this.visit = false
                    this.$emit("close",true)
                } else {
                    this.$message.error('添加失败');
                }
                this.saveLoading = false
            },
            save(){
                let kf = this.visitForm.kf.length>0?this.visitForm.kf.split("|")[0]:""
                let kfCode = this.visitForm.kf.length>0?this.visitForm.kf.split("|")[1]:""
                this.UpdateVisit({
                    "id": this.mes.id,
                    "visitNO": this.mes.visitNO,
                    "visitDate": this.mes.visitDate,
                    "fxCode": this.mes.fxCode,
                    "visitContent":this.mes.visitContent,
                    "visitRecord": this.newRecord,
                    "IsSatisfaction":this.Satisfied,
                    "recordDate": this.mes.recordDate,
                    "visitStatus": 2,
                    "serviceName" : kf,//客服
                    "serviceCode" : kfCode,
                    "serviceCode": this.mes.serviceCode,
                    "serviceName": this.mes.serviceName,
                    "modifiedUserId": getCookie("userId"),
                    "modifiedBy": getCookie("userName")
                })
            },
            creat(){
                this.visitForm.dateInit = new Date()
                this.visit = true
            },
            cancel(){
                this.$emit("close",false)
            }
        }
    };
</script>

<style lang="less" scoped>
.mes{
    background: rgba(238, 241, 246, 1);
    padding: 10px 15px;
    .mes_left{
        width: 60%;
        float: left;
        .column{
            line-height: 26px;
            span{
                display: inline-block
            }
            .wt100{
                width: 100px;
            }
            .wt200{
                width: 200px;
            }
            .wt150{
                width: 150px
            }
            .wt300{
                width: 303px
            }
        }
    }
    .mes_right{
        width: 39%;
        float: left;
        .column{
            line-height: 26px;
            .ipt_lab{
                display:block;
                float: left;
            }
        }
    }
}
    .tabs{
        display: inline-block;
        width: 80px;
        height: 30px;
        line-height: 30px;text-align: center;
        border: 1px solid #6a6d78;
        border-right: none;
        cursor: pointer
    }
    .tabs:last-child{
        border: 1px solid #6a6d78;
        border-radius: 0 3px 3px 0
    }
    .tabs:first-child{
        border-radius: 3px 0 0 3px
    }
    .tabs.active{
        background: #6a6d78;
        color: #fff
    }
    .form_footer{
        text-align: center
    }

</style>


