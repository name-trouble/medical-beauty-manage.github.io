<template>
    <div>
        <reportSearch :searchCondition="searchCondition" ref="search" :filter-back="filter"></reportSearch>
        <el-table :data="tableData" border style="width: 100%;margin-top:15px;margin-bottom:10px;" max-height="560" class="min_table smt" v-loading="loading">
            <el-table-column prop="FxCode" width="100" label="订单编号">
                <template scope="scope">
                    <span class="table_btn" @click="read(scope.$index)" type="text" size="small" >{{scope.row.FxCode}}</span>
                </template>
            </el-table-column>
            <el-table-column prop="OrderType" label="订单来源" min-width="80" align="center">
                <template scope="scope">
                    <el-tag type="success" v-text="scope.row.OrderType==1?'app订单':'线下订单'"></el-tag>
                </template>
            </el-table-column>
            <el-table-column prop="ConsumeTypeId" label=" " width="95">
                <template scope="scope">
                    <el-tag type="success">{{scope.row.ConsumeTypeId|filFun}}</el-tag>
                    <!-- <el-tag type="danger" v-if="scope.row.OrderType == 1">{{scope.row.ConsumeTypeId|filFun}}</el-tag>
                    <el-tag type="success" v-if="scope.row.OrderType == 2">{{scope.row.ConsumeTypeId|filFun}}</el-tag> -->
                </template>
            </el-table-column>
            <el-table-column prop="MedicalTypeId" label="支付类型" width="85">
                <template scope="scope">
                    <el-tag type="success" v-if="scope.row.MedicalTypeId != null">{{scope.row.MedicalTypeId|filFunM}}</el-tag>
                </template>
            </el-table-column>
            <el-table-column prop="OrderDate" width="100" label="订单日期">
                <template scope="scope">
                    <span v-if="scope.row.OrderDate">
                        {{scope.row.OrderDate.substring(0,10)}}
                    </span>
                </template>
            </el-table-column>

            <el-table-column prop="FormNO" label="纸质单号" min-width="100"></el-table-column>
            <el-table-column prop="HospitalName" label="医院" width="170"></el-table-column>
            <el-table-column prop="CustomerName" label="客户" min-width="100">
                <template scope="scope">
                    <el-button type="text" @click="view(scope.$index,tableData)" v-if="scope.row.IsBranch == 1" style="color:black">{{scope.row.CustomerName}}</el-button> 
                    <el-button type="text" @click="view(scope.$index,tableData)" v-else style="color:red">{{scope.row.CustomerName}}</el-button>
                </template>
            </el-table-column>
            <el-table-column prop="RefrenceBranchName" label="推荐人" min-width="100">
                <template scope="scope">
                    {{scope.row.RefrenceBranchName}}<span v-if="scope.row.RefrenceBranchTags">({{scope.row.RefrenceBranchTags}})</span>
                </template>
            </el-table-column>
            <el-table-column prop="ServiceName" label="服务商" min-width="150" show-overflow-tooltip></el-table-column>
            <el-table-column prop="ProjectName" label="项目名称" min-width="150" show-overflow-tooltip></el-table-column>
            <el-table-column prop="OrderAmount" label="订单金额" min-width="90" align="right" >
                <template scope="scope">
                    <span v-if="scope.row.OrderAmount">￥{{scope.row.OrderAmount.toQFW()}}</span>
                    <span v-else>￥0</span>
                </template>
            </el-table-column>
            <el-table-column prop="RealAmount" label="已支付" min-width="90" align="right" >
                <template scope="scope">
                    <span v-if="scope.row.RealAmount">￥{{scope.row.RealAmount.toQFW()}}</span>
                    <span v-else>￥0</span>
                </template>
            </el-table-column>
            <el-table-column prop="RefundAmount" label="退款金额" width="90" align="right">
                <template scope="scope">
                    <span v-if="scope.row.RefundAmount">￥{{scope.row.RefundAmount.toQFW()}}</span>
                    <span v-else>￥0</span>
                </template>
             </el-table-column>
            <el-table-column label="付款状态" width="90">
                <template scope="scope">
                    <div v-if="scope.row.ApproveState !=6&&scope.row.ApproveState!=10">
                         <el-tag type="success" v-if="scope.row.IsPayOff==true">已付清</el-tag>
                        <el-tag type="warning" v-else>未付清</el-tag>
                    </div>
                </template>
            </el-table-column>
            <el-table-column prop="CommandState" label="执行状态" min-width="150">
                <template scope="scope">
                    <div style="width: 80px;float: left">
                        <el-tag type="gray" v-if="scope.row.CommandState == 0">未执行</el-tag>
                        <el-tag type="warning" v-if="scope.row.CommandState == 1">执行中</el-tag>
                        <el-tag type="success" v-if="scope.row.CommandState == 2">执行完毕</el-tag>
                    </div>
                    <div style="float: left" v-if="scope.row.IsPayOff==true">
                        <span v-if="scope.row.CurrentCourse">{{scope.row.CurrentCourse}}</span>
                        <span v-else>0</span>
                        <span v-if="scope.row.Course">/{{scope.row.Course}}</span>
                    </div>
                </template>
            </el-table-column>
        </el-table>

        <!-- 分页 -->
        <div class="block">
            <el-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page="currentPage" :page-sizes="[10, 20, 30, 40]" :page-size="size" layout="total, sizes, prev, pager, next, jumper" :total="total">
            </el-pagination>
        </div>

        <el-dialog ref="pay" title="查看详情" :visible.sync="ispopRead" top="5%" @close="ispopRead=false" size="">
            <pop-read v-if="ispopRead" :data="selectData" style="width:950px"></pop-read>
        </el-dialog>

        <el-dialog title="客户详情" :visible.sync="dialogView"  top="5%"  size="" :close-on-click-modal="false">
            <CustomerView :mes="cusMes" style="width: 1100px"  v-if="dialogView"></CustomerView>
        </el-dialog>
    </div>
</template>

<script type="text/ecmascript-6">
    import reportSearch from "./com/reportSeach.vue"
    import { GetProofOrderCross,getBaseDataByCode } from "@/api/myData"
    import PopRead from './com/reportRead.vue'
    import '@/style/yqCom.less'
    import CustomerView from "./com/customerDetail.vue"
    var _this
    export default {
        components: { reportSearch, PopRead ,CustomerView },
        data() {
            return {
                loading:false,
                cusMes:{},
                dialogView:false,
                currentIndex: 0,
                size: 10,
                total: 0,
                currentPage: 1,
                tableData: [],
                searchCondition: {
                    label: "更新时间",
                    type: "0",
                    tHeader: ['订单编号', '订单来源','规则类型', '支付类型', '订单日期', '纸质单号', '医院', '客户', '推荐人', '服务商', '项目名称', '订单金额', '已支付','退款金额','付款状态','执行状态'],
                    filterVal: ['FxCode', 'OrderType','ConsumeTypeId', 'MedicalTypeId', 'OrderDate', 'FormNO', 'HospitalName', 'CustomerName', 'RefrenceBranchName', 'ServiceName', 'ProjectName','OrderAmount','RealAmount','RefundAmount','IsPayOff','CommandState'],
                    tableData1: [],
                    name: "报单跨院",
                    crossHos:1,//未跨院用户设置搜索医院
                    ApproveState:'',
                    CommandState:'',
                    isExport:1,
                    service:true//服务商是否显示
                },
                ispopRead: false,
                selectData: [],
                fxCode: "",  //当前选中的 fxCode
                consumeList:[],
                medicalList:[],
            }
        },
        filters:{
            filFun(val){
                let len = _this.consumeList.length
                let list =  _this.consumeList
                for(var i = 0;i<len;i++){
                    if(val == list[i].DataCode){
                        return list[i].DataName
                    }
                }
            },
            filFunM(val){
                let len = _this.medicalList.length
                let list =  _this.medicalList
                for(var i = 0;i<len;i++){
                    if(val == list[i].DataCode){
                        return list[i].DataName
                    }
                }
            },
        },
        mounted(){
            _this = this
             this.getType()
        },
        methods: {
            view(index,data){
                this.cusMes = data[index]
                this.dialogView = true
            },
            async getType(){
                let [consumeList,medicalList] = await Promise.all([getBaseDataByCode("0017"),getBaseDataByCode("0022")])
                this.consumeList = consumeList
                this.medicalList = medicalList
            },
            async GetProofOrderCross(params, isAll) {
                if (!isAll)this.loading = true
                try {
                    let res = await GetProofOrderCross(params)
                    if(res.status){
                        if(isAll){
                            this.searchCondition.tableData1 = this.dealData(res.data)
                            this.$refs.search.exportData()
                        }else{
                            this.total = res.count
                            this.tableData = res.data
                        }
                    }else{
                        this.$message({ type: 'error', message: '获取数据失败!'+res.errorMessage })
                    }
                    this.loading = false
                } catch (err) {
                }
            },

            dealData(data){
                let arr = JSON.parse(JSON.stringify(data))
                arr.forEach(row=>{
                    row.CommandState =  this.getStep(row.CommandState)
                    row.OrderType = row.OrderType == '1'?'线上':'线下'
                    if(row.ApproveState == 10){
                        row.IsPayOff = "已关闭"
                    }else if(row.ApproveState == 6){
                        row.IsPayOff = "已退款"
                    }else{
                        if(row.IsPayOff){
                        row.IsPayOff = "已结清"
                        }else{
                            row.IsPayOff = "未结清"
                        }
                    }

                    let len = _this.consumeList.length
                    let list =  _this.consumeList
                    for(var i = 0;i<len;i++){
                        if(row.ConsumeTypeId == list[i].DataCode){
                            row.ConsumeTypeId = list[i].DataName
                        }
                    }

                    let len1 = _this.medicalList.length
                    let list1 =  _this.medicalList
                    for(var i = 0;i<len1;i++){
                        if(row.MedicalTypeId == list1[i].DataCode){
                            row.MedicalTypeId = list1[i].DataName
                        }
                    }
                    if(row.CommandState == 0){
                        row.CommandState == '未执行'
                    }else if(row.CommandState == 1){
                        row.CommandState == '执行中'
                    }else if(row.CommandState == 2){
                        row.CommandState == '执行完毕'
                    }
                    if(!row.CurrentCourse){
                        row.CurrentCourse = 0
                    }   
                    row.CommandState += row.CurrentCourse+'/'+row.Course
                })
                return arr
            },

            getStep(step){
                switch (step){
                    case 0: return '未执行';
                    case 1: return '执行中';
                    case 2: return '执行完毕';
                }
            },

            //            搜索获取条件
            filter(val,setPageIndex,isAll) {//  搜索获取条件
                if(setPageIndex){
                    this.currentPage = 1
                }
                this.GetProofOrderCross({
                    startDate: val.startTimeF,
                    endDate: val.endTimeF,
                    mStartDate: val.startTimeS,
                    mEndDate: val.endTimeS,
                    fxCode: val.bill,
                    formNO: val.num,
                    projectName: val.projectName,
                    isPayOff: val.IsPayOff,
                    commandState: val.CommandState,
                    orderType: val.OrderType,
                    customerName: val.customer,
                    referrerName: val.rec,
                    ApproveState: val.ApproveState,
                    SettState: val.SettState,
                    pageIndex: isAll?1:this.currentPage,
                    pageSize: isAll?this.total:this.size,
                    hospitalCode:val.hospital,
                    ConsumeTypeId:val.ConsumeTypeId,//提成类型
                    MedicalTypeId:val.MedicalTypeId,//支付类型
                    TopBranch:val.toBranch,
                    refHospitalCode:val.refHospitalCode,
                    serviceCode:val.serviceId,
                    // cardNO:val.cardNO,
                },isAll)
            },
            handleSizeChange(val) {
                this.size = val
                this.$refs.search.onSubmit()
            },

            handleCurrentChange(val) {
                this.currentPage = val
                this.$refs.search.onSubmit()
            },

            //            查看
            read(index) {
                this.selectData = this.tableData[index]
                this.ispopRead = true
            }
        },

    }
</script>

<style scoped>
.block{
    float: right
}
</style>
