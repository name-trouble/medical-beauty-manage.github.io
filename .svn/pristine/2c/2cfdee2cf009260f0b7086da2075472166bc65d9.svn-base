<template>
    <div class="projectList selCommon">
        <!-- 查询信息 -->
        <el-form :inline="true" :model="formInline"  >
            <el-form-item label="商品名称：" style='margin-bottom:10px;float:left'>
                <el-input v-model="formInline.name" style="width: 180px"></el-input>
            </el-form-item>
            <el-form-item label="" style='margin-bottom:10px;float:left'>
                <el-button type="primary" @click="onSubmit" class="searchBtn" icon="search">查询</el-button>
                <!-- <el-button type="primary" @click="select" class="searchBtn" icon="plus">添加选中商品</el-button> -->
            </el-form-item>
        </el-form>
        <!-- 查询信息 -->

        <!-- 信息表 -->
        <el-table :data="tableData" border style="width: 100%;margin-top:10px;margin-bottom:10px;" height="500"  v-loading.body="loading">
            <el-table-column prop="imgMainUrl" label="图片" min-width="70">
                <template scope='scope'>
                    <img style="vertical-align: middle" width="50px" height="50px" :src="baseImgPath+scope.row.imgMainUrl" alt="">
                </template>
            </el-table-column>
            <el-table-column prop="goodsCode" label="商品编号" min-width="120"></el-table-column>
            <el-table-column prop="name" label="商品名称" min-width="170" show-overflow-tooltip></el-table-column>
            <el-table-column prop="priceRange" label="原价" min-width="150"></el-table-column>
            <el-table-column prop="priceRange" label="活动价" min-width="100">
                <template scope="scope">
                    <el-input v-model="scope.row.salePrice" style="width:90%"></el-input>
                </template>
            </el-table-column>
            <el-table-column prop="priceRange" label="数量限制" min-width="100">
                <template scope="scope">
                    <el-input v-model="scope.row.limits" style="width:90%"></el-input>
                </template>
            </el-table-column>
            <el-table-column prop="priceRange" label="操作" min-width="80">
                <template scope='scope'>
                    <el-button type="primary" size="small" @click="AddNewActivityItems(scope.row)">选择</el-button>
                </template>
            </el-table-column>
        </el-table>
        <!-- 信息表 -->

        <!-- 分页 -->
        <div class="block">
            <el-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page="currentPage"
                :page-sizes="[10, 20, 30, 40]" :page-size="pageSize" layout="total, sizes, prev, pager, next, jumper" :total="totalPage">
            </el-pagination>
        </div>
        <!-- 分页 -->
    </div>
</template>

<script type="text/ecmascript-6">
    import Vue from 'vue'
    // import VueClipboards from 'vue-clipboards';
    // Vue.use(VueClipboards);
    import {baseImgPath} from "@/config/env"
    import '@/style/selfCommon.less';
    import { setStore,getCookie} from '@/config/mUtils'
    import {GetGoodsByConditions,AddNewActivityItems}  from "@/api/myData"
    export default {
        // name: 'projectList',
        data() {
            return {
                loading:false,
                baseImgPath:baseImgPath,
                baseUrl:baseImgPath,
                currentPage: 1,
                form: {},
                formLabelWidth: '80px',
                pageSize:10,
                totalPage:10,
                // 查询条件数据绑定
                formInline: {
                    name:'',
                },
                // 表格数据
                tableData: [],
                multipleSelection:[],
            }
        },
        props:{
            activityId:""
        },
        mounted: function () {
        },
        methods: {
            // 返回选择项目
            select(item) {
                // item.column.type='primary';
                ;
                // if(this.multipleSelection.length ==0){
                //     this.$message({ message: '请先选择项目',type: 'warning'});
                // }else{
                    // this.AddNewActivityItems(item)
                    
                // }
            },
            // 条件查询
            onSubmit() {
                this.currentPage = 1
              this.search()
            },
            // 分页页面展示数据条数改变触发事件
            handleSizeChange(val) {
                console.log(`每页 ${val} 条`);
                this.pageSize = val
                this.search()
            },
            // 分页当前页码改变触发事件
            handleCurrentChange(val) {
                console.log(`当前页: ${val}`);
                this.currentPage = val
                this.search()
            },
//            复制链接
            handleSuccess(e) {
                alert("复制成功")
            },
            handleError(e) {
               
            },
            async getGoods(data){
                try{
                    let res = await GetGoodsByConditions(data)
                    res.data.forEach(ele=>{
                        ele.limits = 1
                        ele.salePrice = ele.priceSale
                    })
                    this.totalPage = res.count
                    this.tableData = this.splitUrl(res.data)
                    this.loading = false
                }catch(err){
                    console.log(err)
                }
            },

            search(){
                this.loading = true
                this.getGoods({
                    columnCode:'100',
                    catalogCode:"",
                    startPrice:"",
                    endPrice:"",
                    supplierCode:"",
                    keyWords:this.formInline.name.removeSP(),
                    serviceMan:"",
                    state:"1",
                    pageSize:this.pageSize,
                    pageIndex:this.currentPage
                })
            },
            splitUrl(data){
                // data.forEach(row=>{
                //     row.ImgMainUrl = baseImgPath+ row.imgMainUrl
                // })
                return data
            },
            handleSelectionChange(val) {
                this.multipleSelection = val;
            },
            async AddNewActivityItems(data){
                let obj = {
                    // goodsImage:data.imgMainUrl?data.imgMainUrl:"",
                    // goodsPrice:data.price,
                    'goodsId':data.id,
                    "activityId": this.activityId,
                    "limits": data.limits,
                    "salePrice": data.salePrice,
                    "createBy": getCookie('userName'),
                    "createUserId": getCookie('userId'),
                    "modifiedBy": getCookie('userName'),
                    "modifiedUserId": getCookie('userId')
                }
                let res = await AddNewActivityItems(obj)
                if (res.status == true) {
                    this.$message({ message: '选取成功', type: 'success' });
                    this.$emit('selectPro',data)
                } else {
                    this.$message.error('选取失败'+res.errorMessage);
                }
            }
        },
        components: {
            
        }
    }
</script>

<!-- Add "scoped" attribute to limit CSS to this component only -->
<style scoped>
    .goodsList {
        text-align: left;
        font-size: 12px;
    }

    .block {
        padding-bottom: 20px;
    }
</style>
